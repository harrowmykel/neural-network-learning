{
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 442
        },
        "id": "7ceZ1BOS2Xws",
        "outputId": "6f0ac96d-907f-4130-fa92-30d417058cd5"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>a</th>\n",
              "      <th>b</th>\n",
              "      <th>c</th>\n",
              "      <th>d</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4</td>\n",
              "      <td>0.030</td>\n",
              "      <td>0</td>\n",
              "      <td>1.134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4</td>\n",
              "      <td>0.028</td>\n",
              "      <td>0</td>\n",
              "      <td>1.104</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>0.026</td>\n",
              "      <td>0</td>\n",
              "      <td>1.171</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0.024</td>\n",
              "      <td>0</td>\n",
              "      <td>1.242</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>0.022</td>\n",
              "      <td>0</td>\n",
              "      <td>1.174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8</td>\n",
              "      <td>0.030</td>\n",
              "      <td>0</td>\n",
              "      <td>1.233</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>0.028</td>\n",
              "      <td>0</td>\n",
              "      <td>1.323</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0.026</td>\n",
              "      <td>0</td>\n",
              "      <td>1.372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>8</td>\n",
              "      <td>0.024</td>\n",
              "      <td>0</td>\n",
              "      <td>1.248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>8</td>\n",
              "      <td>0.022</td>\n",
              "      <td>0</td>\n",
              "      <td>1.199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>12</td>\n",
              "      <td>0.030</td>\n",
              "      <td>0</td>\n",
              "      <td>1.502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>0.028</td>\n",
              "      <td>0</td>\n",
              "      <td>1.328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>12</td>\n",
              "      <td>0.026</td>\n",
              "      <td>0</td>\n",
              "      <td>1.479</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>12</td>\n",
              "      <td>0.024</td>\n",
              "      <td>0</td>\n",
              "      <td>1.386</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>12</td>\n",
              "      <td>0.022</td>\n",
              "      <td>0</td>\n",
              "      <td>1.302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>24</td>\n",
              "      <td>0.030</td>\n",
              "      <td>0</td>\n",
              "      <td>1.719</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>24</td>\n",
              "      <td>0.028</td>\n",
              "      <td>0</td>\n",
              "      <td>1.785</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>24</td>\n",
              "      <td>0.026</td>\n",
              "      <td>0</td>\n",
              "      <td>1.942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>24</td>\n",
              "      <td>0.024</td>\n",
              "      <td>0</td>\n",
              "      <td>1.957</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>24</td>\n",
              "      <td>0.022</td>\n",
              "      <td>0</td>\n",
              "      <td>1.963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>4</td>\n",
              "      <td>0.030</td>\n",
              "      <td>1</td>\n",
              "      <td>1.009</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>4</td>\n",
              "      <td>0.028</td>\n",
              "      <td>1</td>\n",
              "      <td>1.042</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>4</td>\n",
              "      <td>0.026</td>\n",
              "      <td>1</td>\n",
              "      <td>1.064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>4</td>\n",
              "      <td>0.024</td>\n",
              "      <td>1</td>\n",
              "      <td>1.047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>4</td>\n",
              "      <td>0.022</td>\n",
              "      <td>1</td>\n",
              "      <td>1.134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>8</td>\n",
              "      <td>0.030</td>\n",
              "      <td>1</td>\n",
              "      <td>1.257</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>8</td>\n",
              "      <td>0.028</td>\n",
              "      <td>1</td>\n",
              "      <td>1.265</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>8</td>\n",
              "      <td>0.026</td>\n",
              "      <td>1</td>\n",
              "      <td>1.387</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>8</td>\n",
              "      <td>0.024</td>\n",
              "      <td>1</td>\n",
              "      <td>1.189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>8</td>\n",
              "      <td>0.022</td>\n",
              "      <td>1</td>\n",
              "      <td>1.269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>12</td>\n",
              "      <td>0.030</td>\n",
              "      <td>1</td>\n",
              "      <td>1.406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>12</td>\n",
              "      <td>0.028</td>\n",
              "      <td>1</td>\n",
              "      <td>1.398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>12</td>\n",
              "      <td>0.026</td>\n",
              "      <td>1</td>\n",
              "      <td>1.429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>12</td>\n",
              "      <td>0.024</td>\n",
              "      <td>1</td>\n",
              "      <td>1.486</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>12</td>\n",
              "      <td>0.022</td>\n",
              "      <td>1</td>\n",
              "      <td>1.507</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>24</td>\n",
              "      <td>0.030</td>\n",
              "      <td>1</td>\n",
              "      <td>1.767</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>24</td>\n",
              "      <td>0.028</td>\n",
              "      <td>1</td>\n",
              "      <td>1.872</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>24</td>\n",
              "      <td>0.026</td>\n",
              "      <td>1</td>\n",
              "      <td>1.905</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>24</td>\n",
              "      <td>0.024</td>\n",
              "      <td>1</td>\n",
              "      <td>1.825</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>24</td>\n",
              "      <td>0.022</td>\n",
              "      <td>1</td>\n",
              "      <td>1.808</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     a      b  c      d\n",
              "0    4  0.030  0  1.134\n",
              "1    4  0.028  0  1.104\n",
              "2    4  0.026  0  1.171\n",
              "3    4  0.024  0  1.242\n",
              "4    4  0.022  0  1.174\n",
              "5    8  0.030  0  1.233\n",
              "6    8  0.028  0  1.323\n",
              "7    8  0.026  0  1.372\n",
              "8    8  0.024  0  1.248\n",
              "9    8  0.022  0  1.199\n",
              "10  12  0.030  0  1.502\n",
              "11  12  0.028  0  1.328\n",
              "12  12  0.026  0  1.479\n",
              "13  12  0.024  0  1.386\n",
              "14  12  0.022  0  1.302\n",
              "15  24  0.030  0  1.719\n",
              "16  24  0.028  0  1.785\n",
              "17  24  0.026  0  1.942\n",
              "18  24  0.024  0  1.957\n",
              "19  24  0.022  0  1.963\n",
              "20   4  0.030  1  1.009\n",
              "21   4  0.028  1  1.042\n",
              "22   4  0.026  1  1.064\n",
              "23   4  0.024  1  1.047\n",
              "24   4  0.022  1  1.134\n",
              "25   8  0.030  1  1.257\n",
              "26   8  0.028  1  1.265\n",
              "27   8  0.026  1  1.387\n",
              "28   8  0.024  1  1.189\n",
              "29   8  0.022  1  1.269\n",
              "30  12  0.030  1  1.406\n",
              "31  12  0.028  1  1.398\n",
              "32  12  0.026  1  1.429\n",
              "33  12  0.024  1  1.486\n",
              "34  12  0.022  1  1.507\n",
              "35  24  0.030  1  1.767\n",
              "36  24  0.028  1  1.872\n",
              "37  24  0.026  1  1.905\n",
              "38  24  0.024  1  1.825\n",
              "39  24  0.022  1  1.808"
            ]
          },
          "execution_count": 1,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "import pandas as pd\n",
        "\n",
        "structure_data = pd.read_csv('./train.csv')\n",
        "structure_data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JzHJWLxM2o2b",
        "outputId": "b2e2adfc-ade3-4153-82e1-75191ab3eb41"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "d\n",
              "1.134    2\n",
              "1.406    1\n",
              "1.064    1\n",
              "1.047    1\n",
              "1.257    1\n",
              "1.265    1\n",
              "1.387    1\n",
              "1.189    1\n",
              "1.269    1\n",
              "1.398    1\n",
              "1.009    1\n",
              "1.429    1\n",
              "1.486    1\n",
              "1.507    1\n",
              "1.767    1\n",
              "1.872    1\n",
              "1.905    1\n",
              "1.825    1\n",
              "1.042    1\n",
              "1.963    1\n",
              "1.104    1\n",
              "1.199    1\n",
              "1.171    1\n",
              "1.242    1\n",
              "1.174    1\n",
              "1.233    1\n",
              "1.323    1\n",
              "1.372    1\n",
              "1.248    1\n",
              "1.502    1\n",
              "1.957    1\n",
              "1.328    1\n",
              "1.479    1\n",
              "1.386    1\n",
              "1.302    1\n",
              "1.719    1\n",
              "1.785    1\n",
              "1.942    1\n",
              "1.808    1\n",
              "Name: count, dtype: int64"
            ]
          },
          "execution_count": 2,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "structure_data['d'].value_counts()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 442
        },
        "id": "ZTGNg1P426ef",
        "outputId": "34e324bf-395c-484a-9a15-f85388b71799"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>a</th>\n",
              "      <th>b</th>\n",
              "      <th>c</th>\n",
              "      <th>d</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>4</td>\n",
              "      <td>0.026</td>\n",
              "      <td>0</td>\n",
              "      <td>1.171</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>12</td>\n",
              "      <td>0.028</td>\n",
              "      <td>1</td>\n",
              "      <td>1.398</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>4</td>\n",
              "      <td>0.024</td>\n",
              "      <td>0</td>\n",
              "      <td>1.242</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>4</td>\n",
              "      <td>0.028</td>\n",
              "      <td>1</td>\n",
              "      <td>1.042</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>8</td>\n",
              "      <td>0.026</td>\n",
              "      <td>1</td>\n",
              "      <td>1.387</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>8</td>\n",
              "      <td>0.022</td>\n",
              "      <td>1</td>\n",
              "      <td>1.269</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>4</td>\n",
              "      <td>0.026</td>\n",
              "      <td>1</td>\n",
              "      <td>1.064</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>24</td>\n",
              "      <td>0.022</td>\n",
              "      <td>1</td>\n",
              "      <td>1.808</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>24</td>\n",
              "      <td>0.022</td>\n",
              "      <td>0</td>\n",
              "      <td>1.963</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>8</td>\n",
              "      <td>0.028</td>\n",
              "      <td>1</td>\n",
              "      <td>1.265</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>12</td>\n",
              "      <td>0.026</td>\n",
              "      <td>1</td>\n",
              "      <td>1.429</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>24</td>\n",
              "      <td>0.026</td>\n",
              "      <td>0</td>\n",
              "      <td>1.942</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>12</td>\n",
              "      <td>0.030</td>\n",
              "      <td>1</td>\n",
              "      <td>1.406</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>24</td>\n",
              "      <td>0.028</td>\n",
              "      <td>1</td>\n",
              "      <td>1.872</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>12</td>\n",
              "      <td>0.024</td>\n",
              "      <td>1</td>\n",
              "      <td>1.486</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>8</td>\n",
              "      <td>0.024</td>\n",
              "      <td>1</td>\n",
              "      <td>1.189</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>4</td>\n",
              "      <td>0.022</td>\n",
              "      <td>0</td>\n",
              "      <td>1.174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>12</td>\n",
              "      <td>0.022</td>\n",
              "      <td>0</td>\n",
              "      <td>1.302</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>12</td>\n",
              "      <td>0.030</td>\n",
              "      <td>0</td>\n",
              "      <td>1.502</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>24</td>\n",
              "      <td>0.030</td>\n",
              "      <td>1</td>\n",
              "      <td>1.767</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>4</td>\n",
              "      <td>0.024</td>\n",
              "      <td>1</td>\n",
              "      <td>1.047</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>4</td>\n",
              "      <td>0.022</td>\n",
              "      <td>1</td>\n",
              "      <td>1.134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>12</td>\n",
              "      <td>0.022</td>\n",
              "      <td>1</td>\n",
              "      <td>1.507</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>4</td>\n",
              "      <td>0.030</td>\n",
              "      <td>1</td>\n",
              "      <td>1.009</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>24</td>\n",
              "      <td>0.024</td>\n",
              "      <td>0</td>\n",
              "      <td>1.957</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>8</td>\n",
              "      <td>0.030</td>\n",
              "      <td>1</td>\n",
              "      <td>1.257</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>8</td>\n",
              "      <td>0.028</td>\n",
              "      <td>0</td>\n",
              "      <td>1.323</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>12</td>\n",
              "      <td>0.024</td>\n",
              "      <td>0</td>\n",
              "      <td>1.386</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>8</td>\n",
              "      <td>0.026</td>\n",
              "      <td>0</td>\n",
              "      <td>1.372</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>24</td>\n",
              "      <td>0.024</td>\n",
              "      <td>1</td>\n",
              "      <td>1.825</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>4</td>\n",
              "      <td>0.028</td>\n",
              "      <td>0</td>\n",
              "      <td>1.104</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>24</td>\n",
              "      <td>0.028</td>\n",
              "      <td>0</td>\n",
              "      <td>1.785</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>4</td>\n",
              "      <td>0.030</td>\n",
              "      <td>0</td>\n",
              "      <td>1.134</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>24</td>\n",
              "      <td>0.030</td>\n",
              "      <td>0</td>\n",
              "      <td>1.719</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>8</td>\n",
              "      <td>0.030</td>\n",
              "      <td>0</td>\n",
              "      <td>1.233</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>12</td>\n",
              "      <td>0.028</td>\n",
              "      <td>0</td>\n",
              "      <td>1.328</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>8</td>\n",
              "      <td>0.022</td>\n",
              "      <td>0</td>\n",
              "      <td>1.199</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>8</td>\n",
              "      <td>0.024</td>\n",
              "      <td>0</td>\n",
              "      <td>1.248</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>12</td>\n",
              "      <td>0.026</td>\n",
              "      <td>0</td>\n",
              "      <td>1.479</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>24</td>\n",
              "      <td>0.026</td>\n",
              "      <td>1</td>\n",
              "      <td>1.905</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "     a      b  c      d\n",
              "2    4  0.026  0  1.171\n",
              "31  12  0.028  1  1.398\n",
              "3    4  0.024  0  1.242\n",
              "21   4  0.028  1  1.042\n",
              "27   8  0.026  1  1.387\n",
              "29   8  0.022  1  1.269\n",
              "22   4  0.026  1  1.064\n",
              "39  24  0.022  1  1.808\n",
              "19  24  0.022  0  1.963\n",
              "26   8  0.028  1  1.265\n",
              "32  12  0.026  1  1.429\n",
              "17  24  0.026  0  1.942\n",
              "30  12  0.030  1  1.406\n",
              "36  24  0.028  1  1.872\n",
              "33  12  0.024  1  1.486\n",
              "28   8  0.024  1  1.189\n",
              "4    4  0.022  0  1.174\n",
              "14  12  0.022  0  1.302\n",
              "10  12  0.030  0  1.502\n",
              "35  24  0.030  1  1.767\n",
              "23   4  0.024  1  1.047\n",
              "24   4  0.022  1  1.134\n",
              "34  12  0.022  1  1.507\n",
              "20   4  0.030  1  1.009\n",
              "18  24  0.024  0  1.957\n",
              "25   8  0.030  1  1.257\n",
              "6    8  0.028  0  1.323\n",
              "13  12  0.024  0  1.386\n",
              "7    8  0.026  0  1.372\n",
              "38  24  0.024  1  1.825\n",
              "1    4  0.028  0  1.104\n",
              "16  24  0.028  0  1.785\n",
              "0    4  0.030  0  1.134\n",
              "15  24  0.030  0  1.719\n",
              "5    8  0.030  0  1.233\n",
              "11  12  0.028  0  1.328\n",
              "9    8  0.022  0  1.199\n",
              "8    8  0.024  0  1.248\n",
              "12  12  0.026  0  1.479\n",
              "37  24  0.026  1  1.905"
            ]
          },
          "execution_count": 3,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "structure_data_shuffled = structure_data.sample(n=len(structure_data), random_state=1)\n",
        "structure_data_shuffled"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 4,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "fUOSxYJg44xV",
        "outputId": "a097e8ea-eb2e-4a57-e3ed-1769c1b2704a"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0.022</th>\n",
              "      <th>0.024</th>\n",
              "      <th>0.026</th>\n",
              "      <th>0.028</th>\n",
              "      <th>0.030</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "      <td>True</td>\n",
              "      <td>False</td>\n",
              "      <td>False</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "    0.022  0.024  0.026  0.028  0.030\n",
              "2   False  False   True  False  False\n",
              "31  False  False  False   True  False\n",
              "3   False   True  False  False  False\n",
              "21  False  False  False   True  False\n",
              "27  False  False   True  False  False"
            ]
          },
          "execution_count": 4,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "pd.get_dummies(structure_data_shuffled['b']).head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 5,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "sSVaa5-L5KdJ",
        "outputId": "edfa66f1-fb08-4269-97d4-477a4e222cd8"
      },
      "outputs": [],
      "source": [
        "# get the data without the result\n",
        "structure_data_x_data = structure_data_shuffled.drop('d', axis=1)\n",
        "structure_data_y_data = structure_data_shuffled['d']"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "R97mZLVw87aA",
        "outputId": "6ebb8afa-5be2-4d6f-fed0-d50f6f8e6343"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "(20, 10, 10)"
            ]
          },
          "execution_count": 6,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "#split the data into test, trin and validation data\n",
        "train_pd, test_pd, val_pd = structure_data_shuffled[:20], structure_data_shuffled[20:30], structure_data_shuffled[30:]\n",
        "len(train_pd), len(test_pd), len(val_pd)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "LwfTPXHf9Xac",
        "outputId": "12620658-fac7-4802-e647-49a5368f730a"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "((20, 3), (20,), (10, 3), (10,), (10, 3), (10,))"
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# try to get the data from the separeted data\n",
        "X_train, y_train = train_pd.to_numpy()[:, :-1], train_pd.to_numpy()[:, -1]\n",
        "X_val, y_val = val_pd.to_numpy()[:, :-1], val_pd.to_numpy()[:, -1]\n",
        "X_test, y_test = test_pd.to_numpy()[:, :-1], test_pd.to_numpy()[:, -1]\n",
        "\n",
        "columns_count = len(X_train[0])\n",
        "X_train.shape, y_train.shape, X_val.shape, y_val.shape, X_test.shape, y_test.shape\n",
        "# X_train, y_train"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 8,
      "metadata": {
        "id": "KTwC3xG3-ttV"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[-1.104083  ,  0.10804236, -1.36277029],\n",
              "       [-0.02692885,  0.82832477,  0.73379939],\n",
              "       [-1.104083  , -0.61224005, -1.36277029],\n",
              "       [-1.104083  ,  0.82832477,  0.73379939],\n",
              "       [-0.56550593,  0.10804236,  0.73379939],\n",
              "       [-0.56550593, -1.33252245,  0.73379939],\n",
              "       [-1.104083  ,  0.10804236,  0.73379939],\n",
              "       [ 1.58880237, -1.33252245,  0.73379939],\n",
              "       [ 1.58880237, -1.33252245, -1.36277029],\n",
              "       [-0.56550593,  0.82832477,  0.73379939],\n",
              "       [-0.02692885,  0.10804236,  0.73379939],\n",
              "       [ 1.58880237,  0.10804236, -1.36277029],\n",
              "       [-0.02692885,  1.54860717,  0.73379939],\n",
              "       [ 1.58880237,  0.82832477,  0.73379939],\n",
              "       [-0.02692885, -0.61224005,  0.73379939],\n",
              "       [-0.56550593, -0.61224005,  0.73379939],\n",
              "       [-1.104083  , -1.33252245, -1.36277029],\n",
              "       [-0.02692885, -1.33252245, -1.36277029],\n",
              "       [-0.02692885,  1.54860717, -1.36277029],\n",
              "       [ 1.58880237,  1.54860717,  0.73379939]])"
            ]
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "# preprocessing with standard deviation to normalise data\n",
        "from sklearn.preprocessing import StandardScaler\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as pyplot\n",
        "\n",
        "scaler = StandardScaler().fit(X_train[:, :columns_count])\n",
        "\n",
        "def preprocessor(X):\n",
        "  A = np.copy(X)\n",
        "  A[:, :columns_count] = scaler.transform(A[:, :columns_count])\n",
        "  return A\n",
        "\n",
        "X_train, X_val, X_test = preprocessor(X_train), preprocessor(X_val), preprocessor(X_test)\n",
        "X_train"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 9,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QGdkjnZIBwHe",
        "outputId": "7c82f39f-f525-4f74-a436-1907af265c64"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[-1.104083  ,  0.10804236, -1.36277029],\n",
              "       [-0.02692885,  0.82832477,  0.73379939],\n",
              "       [-1.104083  , -0.61224005, -1.36277029],\n",
              "       [-1.104083  ,  0.82832477,  0.73379939],\n",
              "       [-0.56550593,  0.10804236,  0.73379939],\n",
              "       [-0.56550593, -1.33252245,  0.73379939],\n",
              "       [-1.104083  ,  0.10804236,  0.73379939],\n",
              "       [ 1.58880237, -1.33252245,  0.73379939],\n",
              "       [ 1.58880237, -1.33252245, -1.36277029],\n",
              "       [-0.56550593,  0.82832477,  0.73379939],\n",
              "       [-0.02692885,  0.10804236,  0.73379939],\n",
              "       [ 1.58880237,  0.10804236, -1.36277029],\n",
              "       [-0.02692885,  1.54860717,  0.73379939],\n",
              "       [ 1.58880237,  0.82832477,  0.73379939],\n",
              "       [-0.02692885, -0.61224005,  0.73379939],\n",
              "       [-0.56550593, -0.61224005,  0.73379939],\n",
              "       [-1.104083  , -1.33252245, -1.36277029],\n",
              "       [-0.02692885, -1.33252245, -1.36277029],\n",
              "       [-0.02692885,  1.54860717, -1.36277029],\n",
              "       [ 1.58880237,  1.54860717,  0.73379939]])"
            ]
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "X_train.shape, X_val.shape, X_test.shape\n",
        "\n",
        "X_train"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {},
      "outputs": [],
      "source": [
        "from sklearn.metrics import mean_squared_error as mse\n",
        "from sklearn.metrics import root_mean_squared_error as rmse\n",
        "\n",
        "def merge_data(X_data, Y_data, Y_data_prediction):\n",
        "    index =0\n",
        "    result = []\n",
        "    for element in Y_data:\n",
        "        new_data =[]\n",
        "        for i in range(columns_count):\n",
        "            new_data.append( X_data[index, i])\n",
        "        new_data.append(Y_data[index])\n",
        "        new_data.append(Y_data_prediction[index])\n",
        "        result.append(new_data)\n",
        "        index+=1\n",
        "    \n",
        "    return result\n",
        "\n",
        "def visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred):\n",
        "    #visualisation\n",
        "    X_visual=X_val\n",
        "    Y_visual=y_val\n",
        "    Y_visual_pred =y_val_pred\n",
        "    pyplot.scatter(X_visual[:, 1], Y_visual, c=\"red\")\n",
        "    pyplot.scatter(X_visual[:, 1], Y_visual_pred, c=\"blue\")\n",
        "    lsit = merge_data(X_visual,Y_visual, Y_visual_pred)\n",
        "    print(pd.DataFrame(lsit))\n",
        "    print(\"\\nRMSE:\", 'train:', rmse(y_train_pred, y_train), ', valid:', rmse(y_val_pred, y_val))\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 11,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 205
        },
        "id": "35qhlLJXA6Tj",
        "outputId": "49602171-492d-43fc-a32c-32ffac018bd7"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>0</th>\n",
              "      <th>1</th>\n",
              "      <th>2</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>-1.104083</td>\n",
              "      <td>0.108042</td>\n",
              "      <td>-1.362770</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>-0.026929</td>\n",
              "      <td>0.828325</td>\n",
              "      <td>0.733799</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>-1.104083</td>\n",
              "      <td>-0.612240</td>\n",
              "      <td>-1.362770</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>-1.104083</td>\n",
              "      <td>0.828325</td>\n",
              "      <td>0.733799</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>-0.565506</td>\n",
              "      <td>0.108042</td>\n",
              "      <td>0.733799</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          0         1         2\n",
              "0 -1.104083  0.108042 -1.362770\n",
              "1 -0.026929  0.828325  0.733799\n",
              "2 -1.104083 -0.612240 -1.362770\n",
              "3 -1.104083  0.828325  0.733799\n",
              "4 -0.565506  0.108042  0.733799"
            ]
          },
          "execution_count": 11,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "pd.DataFrame(X_train).head()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 12,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 282
        },
        "id": "pYj6apKkBKtQ",
        "outputId": "9d193d75-19c1-455c-89b4-4583a9b00f8b"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "array([[<Axes: title={'center': '0'}>, <Axes: title={'center': '1'}>],\n",
              "       [<Axes: title={'center': '2'}>, <Axes: >]], dtype=object)"
            ]
          },
          "execution_count": 12,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 4 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "pd.DataFrame(X_train).hist()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 13,
      "metadata": {},
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<Axes: >"
            ]
          },
          "execution_count": 13,
          "metadata": {},
          "output_type": "execute_result"
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "pd.DataFrame(X_train)[0].hist()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 14,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "8qGMVzkiChUO",
        "outputId": "855dd2f9-826a-49e7-de95-77a82d3e150d"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "          0         1         2      3         4\n",
            "0 -1.104083  0.828325 -1.362770  1.104  1.180821\n",
            "1  1.588802  0.828325 -1.362770  1.785  1.916356\n",
            "2 -1.104083  1.548607 -1.362770  1.134  1.183259\n",
            "3  1.588802  1.548607 -1.362770  1.719  1.918793\n",
            "4 -0.565506  1.548607 -1.362770  1.233  1.330365\n",
            "5 -0.026929  0.828325 -1.362770  1.328  1.475035\n",
            "6 -0.565506 -1.332522 -1.362770  1.199  1.320617\n",
            "7 -0.565506 -0.612240 -1.362770  1.248  1.323054\n",
            "8 -0.026929  0.108042 -1.362770  1.479  1.472598\n",
            "9  1.588802  0.108042  0.733799  1.905  1.843630\n",
            "\n",
            "RMSE: train: 0.06367995673795708 , valid: 0.10992270420588204\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# try to train with different training models\n",
        "from sklearn.linear_model import LinearRegression\n",
        "\n",
        "lm = LinearRegression().fit(X_train, y_train)\n",
        "#prediction\n",
        "y_train_pred=lm.predict(X_train)\n",
        "y_val_pred=lm.predict(X_val)\n",
        "y_test_pred=lm.predict(X_test)\n",
        "\n",
        "#visualisation\n",
        "visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZiCqR084C9ZB",
        "outputId": "254cf32c-efd1-460f-a4c2-e5f1fea7e02c"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "          0         1         2      3       4\n",
            "0 -1.104083  0.828325 -1.362770  1.104  1.2547\n",
            "1  1.588802  0.828325 -1.362770  1.785  1.5752\n",
            "2 -1.104083  1.548607 -1.362770  1.134  1.2906\n",
            "3  1.588802  1.548607 -1.362770  1.719  1.5715\n",
            "4 -0.565506  1.548607 -1.362770  1.233  1.3419\n",
            "5 -0.026929  0.828325 -1.362770  1.328  1.4044\n",
            "6 -0.565506 -1.332522 -1.362770  1.199  1.4125\n",
            "7 -0.565506 -0.612240 -1.362770  1.248  1.3664\n",
            "8 -0.026929  0.108042 -1.362770  1.479  1.4598\n",
            "9  1.588802  0.108042  0.733799  1.905  1.5684\n",
            "\n",
            "RMSE: train: 0.18824054690740782 , valid: 0.17434779035020778\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "from sklearn.neighbors import KNeighborsRegressor\n",
        "\n",
        "knn = KNeighborsRegressor(n_neighbors=10).fit(X_train, y_train)\n",
        "#prediction\n",
        "y_train_pred=knn.predict(X_train)\n",
        "y_val_pred=knn.predict(X_val)\n",
        "y_test_pred=knn.predict(X_test)\n",
        "\n",
        "#visualisation\n",
        "visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 16,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "YX3GllmBDxhh",
        "outputId": "13b092c6-861e-44bd-c2c3-935a57ba4cd1"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "          0         1         2      3         4\n",
            "0 -1.104083  0.828325 -1.362770  1.104  1.145343\n",
            "1  1.588802  0.828325 -1.362770  1.785  1.921742\n",
            "2 -1.104083  1.548607 -1.362770  1.134  1.149416\n",
            "3  1.588802  1.548607 -1.362770  1.719  1.886441\n",
            "4 -0.565506  1.548607 -1.362770  1.233  1.297916\n",
            "5 -0.026929  0.828325 -1.362770  1.328  1.440339\n",
            "6 -0.565506 -1.332522 -1.362770  1.199  1.257748\n",
            "7 -0.565506 -0.612240 -1.362770  1.248  1.243684\n",
            "8 -0.026929  0.108042 -1.362770  1.479  1.451947\n",
            "9  1.588802  0.108042  0.733799  1.905  1.863967\n",
            "\n",
            "RMSE: train: 0.03449615219484891 , valid: 0.08449936389405617\n"
          ]
        },
        {
          "data": {
            "image/png": "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7bcHfOemTZs2ShUmwcaY8Oijj9per/eM7fr6+uzp06fbP/zhDxPbPv74Y9vj8dg7d+4cxQrTx5tvvmlLsl977bXEtl/84he2ZVl2d3f3sPstXrzY3rBhgwsVpo8FCxbY3/ve9xLrsVjMLiwstOvr64dsf/3119vXXnvtgG0LFy60169fP6p1phunxy3Zf7/ZRJK9Z8+e07b567/+a3vOnDkDtt1www32smXLRrGy9JbMcXvppZdsSfZHH33kSk3J4MpIlgkGgzp+/LiWLFmS2Ob1erVw4UK9+uqrBitzz6uvvqopU6Zo/vz5iW1LlixRTk6O9u/ff9p9n3jiCX3961/XZZddprq6On3yySejXa4xn3/+uQ4ePDjgu5KTk6MlS5YM+1159dVXB7SXpGXLlmXNd0tK7bhJUk9Pj2bOnCmfz6fly5fr0KFDbpSb0fi+nZ25c+eqoKBAS5cu1b59+4zWkhET5WHk9N8TPP/88wdsP//8843eL3TT8ePHB12OHDdunPLz8097DFavXq2ZM2eqsLBQv/nNb/Q3f/M3evvtt+X3+0e7ZCPef/99xWKxIb8r//M//zPkPsePH8/q75aU2nGbPXu2tm/friuuuELhcFgPPPCArrzySh06dIhJQk9juO9bJBLRp59+qkmTJhmqLL0VFBRo27Ztmj9/vqLRqB5++GGVl5dr//79+sY3vmGkJsJIGrrnnnu0efPm07Z56623dMkll7hUUWZI9ril6tQ+JZdffrkKCgp09dVX691339WFF16Y8p8LLFq0SIsWLUqsX3nllbr00kv1r//6r/rHf/xHg5VhLJo9e7Zmz56dWL/yyiv17rvv6qGHHtLjjz9upCbCSBr6/ve/r7Vr1562zQUXXJDSnz19+nRJ0okTJ1RQUJDYfuLECc2dOzelPzNdJHvcpk+fPqgj4f/93//pww8/TByfZCxcuFCS1NHRMSbDyNe//nXl5ubqxIkTA7afOHFi2OM0ffp0R+3HolSO21eNHz9e8+bNU0dHx2iUOGYM933Ly8vjqohDCxYs0N69e429P2EkDU2dOlVTp04dlT971qxZmj59ul544YVE+IhEItq/f7+jJ3LSUbLHbdGiRfr444918OBBffOb35Qkvfjii+rr60sEjGQEAgFJGhDqxpIJEybom9/8pl544QWtWLFCktTX16cXXnhBd95555D7LFq0SC+88IJqa2sT255//vkBv/WPdakct6+KxWJ64403dM0114xipZlv0aJFgx4dz7bv20gJBAJm/y8z3YMWZ+e9996z29vb7fvuu88+99xz7fb2dru9vd0+efJkos3s2bNtv9+fWP/nf/5ne8qUKfbPf/5z+ze/+Y29fPlye9asWfann35q4iMY8Wd/9mf2vHnz7P3799t79+61//iP/9hetWpV4vWjR4/as2fPtvfv32/btm13dHTY//AP/2C3tbXZwWDQ/vnPf25fcMEF9re//W1TH8EVTz31lO3xeOzGxkb7zTfftG+//XZ7ypQp9vHjx23btu2bbrrJvueeexLt9+3bZ48bN85+4IEH7Lfeesu+99577fHjx9tvvPGGqY9ghNPjdt9999nPPfec/e6779oHDx60v/vd79oTJ060Dx06ZOojGHHy5MnE/2GS7AcffNBub2+333vvPdu2bfuee+6xb7rppkT7w4cP2+ecc459991322+99Zbd0NBg5+bm2s8++6ypj2CE0+P20EMP2U1NTfY777xjv/HGG/aGDRvsnJwc+1e/+pWpj2ATRjJcTU2NLWnQ8tJLLyXaSLIfffTRxHpfX5/9gx/8wD7//PNtj8djX3311fbbb7/tfvEGffDBB/aqVavsc889187Ly7NvvvnmAQEuGAwOOI6dnZ32t7/9bTs/P9/2eDz2RRddZN999912OBw29Anc85Of/MQuLi62J0yYYC9YsMD+9a9/nXht8eLFdk1NzYD2P/vZz+yLL77YnjBhgj1nzhz7v//7v12uOD04OW61tbWJtueff759zTXX2K+//rqBqs3qf+T0q0v/saqpqbEXL148aJ+5c+faEyZMsC+44IIB/9dlC6fHbfPmzfaFF15oT5w40c7Pz7fLy8vtF1980UzxX7Bs27ZdvhgDAACQwDgjAADAKMIIAAAwijACAACMIowAAACjCCMAAMAowggAADCKMAIAAIwijAAAAKMIIwAAwCjCCAAAMIowAgAAjCKMAAAAo/4fHKeq/AOQK4MAAAAASUVORK5CYII=",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "from sklearn.ensemble import RandomForestRegressor\n",
        "\n",
        "rfr = RandomForestRegressor(max_depth=10, n_estimators=1000).fit(X_train, y_train)\n",
        "#prediction\n",
        "y_train_pred=rfr.predict(X_train)\n",
        "y_val_pred=rfr.predict(X_val)\n",
        "y_test_pred=rfr.predict(X_test)\n",
        "\n",
        "#visualisation\n",
        "visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 17,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "VLuWncFHEV_q",
        "outputId": "c0a35a35-9e32-40b9-a1d4-be1c0d65394e"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "          0         1         2      3         4\n",
            "0 -1.104083  0.828325 -1.362770  1.104  1.238800\n",
            "1  1.588802  0.828325 -1.362770  1.785  1.764836\n",
            "2 -1.104083  1.548607 -1.362770  1.134  1.238800\n",
            "3  1.588802  1.548607 -1.362770  1.719  1.764836\n",
            "4 -0.565506  1.548607 -1.362770  1.233  1.323888\n",
            "5 -0.026929  0.828325 -1.362770  1.328  1.440609\n",
            "6 -0.565506 -1.332522 -1.362770  1.199  1.330517\n",
            "7 -0.565506 -0.612240 -1.362770  1.248  1.330517\n",
            "8 -0.026929  0.108042 -1.362770  1.479  1.440609\n",
            "9  1.588802  0.108042  0.733799  1.905  1.698589\n",
            "\n",
            "RMSE: train: 0.11065225658366981 , valid: 0.10990367761586725\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "from sklearn.ensemble import GradientBoostingRegressor\n",
        "\n",
        "gbr = GradientBoostingRegressor(n_estimators=10, learning_rate=0.1).fit(X_train, y_train)\n",
        "#prediction\n",
        "y_train_pred=gbr.predict(X_train)\n",
        "y_val_pred=gbr.predict(X_val)\n",
        "y_test_pred=gbr.predict(X_test)\n",
        "\n",
        "#visualisation\n",
        "visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 18,
      "metadata": {
        "id": "H7isnnEiE10q"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "<class 'numpy.ndarray'> <class 'numpy.ndarray'> (10, 3) (10,)\n",
            "Epoch 1/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3s/step - loss: 1.6990 - root_mean_squared_error: 1.3035 - val_loss: 1.3130 - val_root_mean_squared_error: 1.1459\n",
            "Epoch 2/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 193ms/step - loss: 1.3646 - root_mean_squared_error: 1.1682 - val_loss: 1.1871 - val_root_mean_squared_error: 1.0896\n",
            "Epoch 3/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 317ms/step - loss: 1.0904 - root_mean_squared_error: 1.0442 - val_loss: 1.0163 - val_root_mean_squared_error: 1.0081\n",
            "Epoch 4/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 155ms/step - loss: 0.8304 - root_mean_squared_error: 0.9113 - val_loss: 0.8399 - val_root_mean_squared_error: 0.9165\n",
            "Epoch 5/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.6096 - root_mean_squared_error: 0.7808 - val_loss: 0.6740 - val_root_mean_squared_error: 0.8209\n",
            "Epoch 6/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 147ms/step - loss: 0.4360 - root_mean_squared_error: 0.6603 - val_loss: 0.5332 - val_root_mean_squared_error: 0.7302\n",
            "Epoch 7/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.3250 - root_mean_squared_error: 0.5701 - val_loss: 0.4359 - val_root_mean_squared_error: 0.6602\n",
            "Epoch 8/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.2781 - root_mean_squared_error: 0.5274 - val_loss: 0.3769 - val_root_mean_squared_error: 0.6139\n",
            "Epoch 9/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 197ms/step - loss: 0.2518 - root_mean_squared_error: 0.5018 - val_loss: 0.2781 - val_root_mean_squared_error: 0.5273\n",
            "Epoch 10/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.2174 - root_mean_squared_error: 0.4663 - val_loss: 0.2088 - val_root_mean_squared_error: 0.4570\n",
            "Epoch 11/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.1838 - root_mean_squared_error: 0.4287 - val_loss: 0.1612 - val_root_mean_squared_error: 0.4015\n",
            "Epoch 12/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.1564 - root_mean_squared_error: 0.3954 - val_loss: 0.1276 - val_root_mean_squared_error: 0.3572\n",
            "Epoch 13/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step - loss: 0.1368 - root_mean_squared_error: 0.3699 - val_loss: 0.1034 - val_root_mean_squared_error: 0.3216\n",
            "Epoch 14/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.1230 - root_mean_squared_error: 0.3507 - val_loss: 0.0850 - val_root_mean_squared_error: 0.2915\n",
            "Epoch 15/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 135ms/step - loss: 0.1102 - root_mean_squared_error: 0.3319 - val_loss: 0.0689 - val_root_mean_squared_error: 0.2625\n",
            "Epoch 16/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 198ms/step - loss: 0.0951 - root_mean_squared_error: 0.3084 - val_loss: 0.0534 - val_root_mean_squared_error: 0.2312\n",
            "Epoch 17/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0768 - root_mean_squared_error: 0.2771 - val_loss: 0.0385 - val_root_mean_squared_error: 0.1963\n",
            "Epoch 18/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0560 - root_mean_squared_error: 0.2367 - val_loss: 0.0253 - val_root_mean_squared_error: 0.1590\n",
            "Epoch 19/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0367 - root_mean_squared_error: 0.1915 - val_loss: 0.0148 - val_root_mean_squared_error: 0.1216\n",
            "Epoch 20/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0221 - root_mean_squared_error: 0.1486 - val_loss: 0.0089 - val_root_mean_squared_error: 0.0941\n",
            "Epoch 21/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 0.0141 - root_mean_squared_error: 0.1188 - val_loss: 0.0083 - val_root_mean_squared_error: 0.0912\n",
            "Epoch 22/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 335ms/step - loss: 0.0129 - root_mean_squared_error: 0.1136 - val_loss: 0.0122 - val_root_mean_squared_error: 0.1105\n",
            "Epoch 23/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0167 - root_mean_squared_error: 0.1293 - val_loss: 0.0177 - val_root_mean_squared_error: 0.1332\n",
            "Epoch 24/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step - loss: 0.0224 - root_mean_squared_error: 0.1498 - val_loss: 0.0222 - val_root_mean_squared_error: 0.1491\n",
            "Epoch 25/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 98ms/step - loss: 0.0268 - root_mean_squared_error: 0.1637 - val_loss: 0.0244 - val_root_mean_squared_error: 0.1563\n",
            "Epoch 26/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0284 - root_mean_squared_error: 0.1687 - val_loss: 0.0249 - val_root_mean_squared_error: 0.1578\n",
            "Epoch 27/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.0281 - root_mean_squared_error: 0.1675 - val_loss: 0.0251 - val_root_mean_squared_error: 0.1584\n",
            "Epoch 28/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 156ms/step - loss: 0.0274 - root_mean_squared_error: 0.1655 - val_loss: 0.0260 - val_root_mean_squared_error: 0.1613\n",
            "Epoch 29/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0277 - root_mean_squared_error: 0.1664 - val_loss: 0.0275 - val_root_mean_squared_error: 0.1659\n",
            "Epoch 30/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 0.0288 - root_mean_squared_error: 0.1698 - val_loss: 0.0283 - val_root_mean_squared_error: 0.1682\n",
            "Epoch 31/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0296 - root_mean_squared_error: 0.1719 - val_loss: 0.0272 - val_root_mean_squared_error: 0.1649\n",
            "Epoch 32/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0286 - root_mean_squared_error: 0.1690 - val_loss: 0.0241 - val_root_mean_squared_error: 0.1553\n",
            "Epoch 33/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0256 - root_mean_squared_error: 0.1600 - val_loss: 0.0204 - val_root_mean_squared_error: 0.1428\n",
            "Epoch 34/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 164ms/step - loss: 0.0217 - root_mean_squared_error: 0.1472 - val_loss: 0.0178 - val_root_mean_squared_error: 0.1334\n",
            "Epoch 35/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0182 - root_mean_squared_error: 0.1351 - val_loss: 0.0173 - val_root_mean_squared_error: 0.1314\n",
            "Epoch 36/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 215ms/step - loss: 0.0162 - root_mean_squared_error: 0.1274 - val_loss: 0.0182 - val_root_mean_squared_error: 0.1350\n",
            "Epoch 37/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0154 - root_mean_squared_error: 0.1240 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1378\n",
            "Epoch 38/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0146 - root_mean_squared_error: 0.1209 - val_loss: 0.0181 - val_root_mean_squared_error: 0.1346\n",
            "Epoch 39/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.0132 - root_mean_squared_error: 0.1149 - val_loss: 0.0154 - val_root_mean_squared_error: 0.1240\n",
            "Epoch 40/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 0.0112 - root_mean_squared_error: 0.1056 - val_loss: 0.0119 - val_root_mean_squared_error: 0.1092\n",
            "Epoch 41/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 383ms/step - loss: 0.0094 - root_mean_squared_error: 0.0968 - val_loss: 0.0091 - val_root_mean_squared_error: 0.0953\n",
            "Epoch 42/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0086 - root_mean_squared_error: 0.0929 - val_loss: 0.0074 - val_root_mean_squared_error: 0.0862\n",
            "Epoch 43/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 142ms/step - loss: 0.0088 - root_mean_squared_error: 0.0941 - val_loss: 0.0067 - val_root_mean_squared_error: 0.0821\n",
            "Epoch 44/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0093 - root_mean_squared_error: 0.0966 - val_loss: 0.0067 - val_root_mean_squared_error: 0.0816\n",
            "Epoch 45/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 129ms/step - loss: 0.0094 - root_mean_squared_error: 0.0970 - val_loss: 0.0072 - val_root_mean_squared_error: 0.0850\n",
            "Epoch 46/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step - loss: 0.0090 - root_mean_squared_error: 0.0950 - val_loss: 0.0088 - val_root_mean_squared_error: 0.0940\n",
            "Epoch 47/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0087 - root_mean_squared_error: 0.0930 - val_loss: 0.0115 - val_root_mean_squared_error: 0.1071\n",
            "Epoch 48/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 174ms/step - loss: 0.0088 - root_mean_squared_error: 0.0937 - val_loss: 0.0144 - val_root_mean_squared_error: 0.1199\n",
            "Epoch 49/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0093 - root_mean_squared_error: 0.0965 - val_loss: 0.0163 - val_root_mean_squared_error: 0.1276\n",
            "Epoch 50/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0098 - root_mean_squared_error: 0.0988 - val_loss: 0.0164 - val_root_mean_squared_error: 0.1279\n",
            "Epoch 51/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step - loss: 0.0098 - root_mean_squared_error: 0.0988 - val_loss: 0.0148 - val_root_mean_squared_error: 0.1218\n",
            "Epoch 52/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 94ms/step - loss: 0.0094 - root_mean_squared_error: 0.0969 - val_loss: 0.0126 - val_root_mean_squared_error: 0.1125\n",
            "Epoch 53/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0091 - root_mean_squared_error: 0.0952 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1039\n",
            "Epoch 54/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 0.0090 - root_mean_squared_error: 0.0949 - val_loss: 0.0098 - val_root_mean_squared_error: 0.0987\n",
            "Epoch 55/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step - loss: 0.0091 - root_mean_squared_error: 0.0953 - val_loss: 0.0095 - val_root_mean_squared_error: 0.0977\n",
            "Epoch 56/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0090 - root_mean_squared_error: 0.0949 - val_loss: 0.0101 - val_root_mean_squared_error: 0.1006\n",
            "Epoch 57/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step - loss: 0.0087 - root_mean_squared_error: 0.0931 - val_loss: 0.0115 - val_root_mean_squared_error: 0.1070\n",
            "Epoch 58/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 106ms/step - loss: 0.0083 - root_mean_squared_error: 0.0908 - val_loss: 0.0133 - val_root_mean_squared_error: 0.1153\n",
            "Epoch 59/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 385ms/step - loss: 0.0080 - root_mean_squared_error: 0.0895 - val_loss: 0.0151 - val_root_mean_squared_error: 0.1228\n",
            "Epoch 60/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 156ms/step - loss: 0.0080 - root_mean_squared_error: 0.0894 - val_loss: 0.0161 - val_root_mean_squared_error: 0.1270\n",
            "Epoch 61/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.0080 - root_mean_squared_error: 0.0893 - val_loss: 0.0161 - val_root_mean_squared_error: 0.1268\n",
            "Epoch 62/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 122ms/step - loss: 0.0079 - root_mean_squared_error: 0.0887 - val_loss: 0.0151 - val_root_mean_squared_error: 0.1229\n",
            "Epoch 63/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0077 - root_mean_squared_error: 0.0876 - val_loss: 0.0138 - val_root_mean_squared_error: 0.1175\n",
            "Epoch 64/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 263ms/step - loss: 0.0076 - root_mean_squared_error: 0.0870 - val_loss: 0.0127 - val_root_mean_squared_error: 0.1128\n",
            "Epoch 65/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0076 - root_mean_squared_error: 0.0871 - val_loss: 0.0122 - val_root_mean_squared_error: 0.1104\n",
            "Epoch 66/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 200ms/step - loss: 0.0077 - root_mean_squared_error: 0.0876 - val_loss: 0.0122 - val_root_mean_squared_error: 0.1107\n",
            "Epoch 67/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 267ms/step - loss: 0.0077 - root_mean_squared_error: 0.0877 - val_loss: 0.0128 - val_root_mean_squared_error: 0.1133\n",
            "Epoch 68/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0076 - root_mean_squared_error: 0.0873 - val_loss: 0.0138 - val_root_mean_squared_error: 0.1174\n",
            "Epoch 69/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 169ms/step - loss: 0.0076 - root_mean_squared_error: 0.0870 - val_loss: 0.0148 - val_root_mean_squared_error: 0.1217\n",
            "Epoch 70/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step - loss: 0.0076 - root_mean_squared_error: 0.0870 - val_loss: 0.0155 - val_root_mean_squared_error: 0.1246\n",
            "Epoch 71/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0076 - root_mean_squared_error: 0.0872 - val_loss: 0.0156 - val_root_mean_squared_error: 0.1250\n",
            "Epoch 72/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0076 - root_mean_squared_error: 0.0871 - val_loss: 0.0151 - val_root_mean_squared_error: 0.1228\n",
            "Epoch 73/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 283ms/step - loss: 0.0075 - root_mean_squared_error: 0.0867 - val_loss: 0.0141 - val_root_mean_squared_error: 0.1189\n",
            "Epoch 74/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0074 - root_mean_squared_error: 0.0861 - val_loss: 0.0132 - val_root_mean_squared_error: 0.1147\n",
            "Epoch 75/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0074 - root_mean_squared_error: 0.0858 - val_loss: 0.0124 - val_root_mean_squared_error: 0.1115\n",
            "Epoch 76/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0073 - root_mean_squared_error: 0.0857 - val_loss: 0.0121 - val_root_mean_squared_error: 0.1099\n",
            "Epoch 77/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0073 - root_mean_squared_error: 0.0854 - val_loss: 0.0121 - val_root_mean_squared_error: 0.1099\n",
            "Epoch 78/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 0.0072 - root_mean_squared_error: 0.0849 - val_loss: 0.0124 - val_root_mean_squared_error: 0.1113\n",
            "Epoch 79/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.0071 - root_mean_squared_error: 0.0844 - val_loss: 0.0128 - val_root_mean_squared_error: 0.1130\n",
            "Epoch 80/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0071 - root_mean_squared_error: 0.0841 - val_loss: 0.0130 - val_root_mean_squared_error: 0.1140\n",
            "Epoch 81/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0070 - root_mean_squared_error: 0.0839 - val_loss: 0.0129 - val_root_mean_squared_error: 0.1135\n",
            "Epoch 82/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - loss: 0.0070 - root_mean_squared_error: 0.0837 - val_loss: 0.0124 - val_root_mean_squared_error: 0.1115\n",
            "Epoch 83/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0069 - root_mean_squared_error: 0.0834 - val_loss: 0.0118 - val_root_mean_squared_error: 0.1085\n",
            "Epoch 84/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0069 - root_mean_squared_error: 0.0830 - val_loss: 0.0111 - val_root_mean_squared_error: 0.1055\n",
            "Epoch 85/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0068 - root_mean_squared_error: 0.0827 - val_loss: 0.0106 - val_root_mean_squared_error: 0.1031\n",
            "Epoch 86/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 148ms/step - loss: 0.0068 - root_mean_squared_error: 0.0824 - val_loss: 0.0104 - val_root_mean_squared_error: 0.1020\n",
            "Epoch 87/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0067 - root_mean_squared_error: 0.0820 - val_loss: 0.0104 - val_root_mean_squared_error: 0.1021\n",
            "Epoch 88/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 0.0066 - root_mean_squared_error: 0.0815 - val_loss: 0.0106 - val_root_mean_squared_error: 0.1030\n",
            "Epoch 89/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 283ms/step - loss: 0.0066 - root_mean_squared_error: 0.0810 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1040\n",
            "Epoch 90/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0065 - root_mean_squared_error: 0.0806 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1043\n",
            "Epoch 91/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0064 - root_mean_squared_error: 0.0801 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 92/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 0.0064 - root_mean_squared_error: 0.0797 - val_loss: 0.0104 - val_root_mean_squared_error: 0.1022\n",
            "Epoch 93/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0063 - root_mean_squared_error: 0.0792 - val_loss: 0.0100 - val_root_mean_squared_error: 0.1002\n",
            "Epoch 94/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0062 - root_mean_squared_error: 0.0787 - val_loss: 0.0097 - val_root_mean_squared_error: 0.0984\n",
            "Epoch 95/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 182ms/step - loss: 0.0061 - root_mean_squared_error: 0.0783 - val_loss: 0.0095 - val_root_mean_squared_error: 0.0972\n",
            "Epoch 96/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0061 - root_mean_squared_error: 0.0779 - val_loss: 0.0094 - val_root_mean_squared_error: 0.0968\n",
            "Epoch 97/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0060 - root_mean_squared_error: 0.0774 - val_loss: 0.0094 - val_root_mean_squared_error: 0.0971\n",
            "Epoch 98/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0059 - root_mean_squared_error: 0.0769 - val_loss: 0.0095 - val_root_mean_squared_error: 0.0976\n",
            "Epoch 99/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 373ms/step - loss: 0.0058 - root_mean_squared_error: 0.0764 - val_loss: 0.0096 - val_root_mean_squared_error: 0.0979\n",
            "Epoch 100/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 237ms/step - loss: 0.0058 - root_mean_squared_error: 0.0760 - val_loss: 0.0095 - val_root_mean_squared_error: 0.0977\n",
            "Epoch 101/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0057 - root_mean_squared_error: 0.0756 - val_loss: 0.0094 - val_root_mean_squared_error: 0.0969\n",
            "Epoch 102/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step - loss: 0.0057 - root_mean_squared_error: 0.0752 - val_loss: 0.0092 - val_root_mean_squared_error: 0.0957\n",
            "Epoch 103/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0056 - root_mean_squared_error: 0.0748 - val_loss: 0.0089 - val_root_mean_squared_error: 0.0945\n",
            "Epoch 104/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 0.0055 - root_mean_squared_error: 0.0744 - val_loss: 0.0088 - val_root_mean_squared_error: 0.0936\n",
            "Epoch 105/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0055 - root_mean_squared_error: 0.0741 - val_loss: 0.0087 - val_root_mean_squared_error: 0.0934\n",
            "Epoch 106/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 216ms/step - loss: 0.0054 - root_mean_squared_error: 0.0737 - val_loss: 0.0088 - val_root_mean_squared_error: 0.0937\n",
            "Epoch 107/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 332ms/step - loss: 0.0054 - root_mean_squared_error: 0.0734 - val_loss: 0.0089 - val_root_mean_squared_error: 0.0942\n",
            "Epoch 108/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 313ms/step - loss: 0.0053 - root_mean_squared_error: 0.0730 - val_loss: 0.0090 - val_root_mean_squared_error: 0.0947\n",
            "Epoch 109/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0053 - root_mean_squared_error: 0.0727 - val_loss: 0.0090 - val_root_mean_squared_error: 0.0950\n",
            "Epoch 110/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 331ms/step - loss: 0.0052 - root_mean_squared_error: 0.0724 - val_loss: 0.0090 - val_root_mean_squared_error: 0.0948\n",
            "Epoch 111/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0052 - root_mean_squared_error: 0.0721 - val_loss: 0.0089 - val_root_mean_squared_error: 0.0944\n",
            "Epoch 112/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 98ms/step - loss: 0.0052 - root_mean_squared_error: 0.0718 - val_loss: 0.0088 - val_root_mean_squared_error: 0.0939\n",
            "Epoch 113/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0051 - root_mean_squared_error: 0.0715 - val_loss: 0.0088 - val_root_mean_squared_error: 0.0938\n",
            "Epoch 114/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0051 - root_mean_squared_error: 0.0712 - val_loss: 0.0088 - val_root_mean_squared_error: 0.0940\n",
            "Epoch 115/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 154ms/step - loss: 0.0050 - root_mean_squared_error: 0.0708 - val_loss: 0.0090 - val_root_mean_squared_error: 0.0947\n",
            "Epoch 116/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 156ms/step - loss: 0.0049 - root_mean_squared_error: 0.0704 - val_loss: 0.0092 - val_root_mean_squared_error: 0.0957\n",
            "Epoch 117/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0049 - root_mean_squared_error: 0.0699 - val_loss: 0.0094 - val_root_mean_squared_error: 0.0967\n",
            "Epoch 118/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 0.0048 - root_mean_squared_error: 0.0695 - val_loss: 0.0095 - val_root_mean_squared_error: 0.0976\n",
            "Epoch 119/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 171ms/step - loss: 0.0048 - root_mean_squared_error: 0.0691 - val_loss: 0.0097 - val_root_mean_squared_error: 0.0983\n",
            "Epoch 120/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 104ms/step - loss: 0.0047 - root_mean_squared_error: 0.0686 - val_loss: 0.0098 - val_root_mean_squared_error: 0.0988\n",
            "Epoch 121/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 379ms/step - loss: 0.0047 - root_mean_squared_error: 0.0682 - val_loss: 0.0098 - val_root_mean_squared_error: 0.0992\n",
            "Epoch 122/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - loss: 0.0046 - root_mean_squared_error: 0.0678 - val_loss: 0.0100 - val_root_mean_squared_error: 0.0999\n",
            "Epoch 123/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step - loss: 0.0045 - root_mean_squared_error: 0.0674 - val_loss: 0.0101 - val_root_mean_squared_error: 0.1007\n",
            "Epoch 124/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 146ms/step - loss: 0.0045 - root_mean_squared_error: 0.0671 - val_loss: 0.0104 - val_root_mean_squared_error: 0.1018\n",
            "Epoch 125/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - loss: 0.0044 - root_mean_squared_error: 0.0667 - val_loss: 0.0106 - val_root_mean_squared_error: 0.1028\n",
            "Epoch 126/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 144ms/step - loss: 0.0044 - root_mean_squared_error: 0.0663 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1038\n",
            "Epoch 127/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0044 - root_mean_squared_error: 0.0660 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1046\n",
            "Epoch 128/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0043 - root_mean_squared_error: 0.0656 - val_loss: 0.0111 - val_root_mean_squared_error: 0.1051\n",
            "Epoch 129/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0043 - root_mean_squared_error: 0.0653 - val_loss: 0.0111 - val_root_mean_squared_error: 0.1055\n",
            "Epoch 130/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 148ms/step - loss: 0.0042 - root_mean_squared_error: 0.0650 - val_loss: 0.0112 - val_root_mean_squared_error: 0.1058\n",
            "Epoch 131/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0042 - root_mean_squared_error: 0.0647 - val_loss: 0.0113 - val_root_mean_squared_error: 0.1061\n",
            "Epoch 132/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 328ms/step - loss: 0.0041 - root_mean_squared_error: 0.0644 - val_loss: 0.0114 - val_root_mean_squared_error: 0.1066\n",
            "Epoch 133/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 171ms/step - loss: 0.0041 - root_mean_squared_error: 0.0641 - val_loss: 0.0115 - val_root_mean_squared_error: 0.1071\n",
            "Epoch 134/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 0.0041 - root_mean_squared_error: 0.0639 - val_loss: 0.0115 - val_root_mean_squared_error: 0.1075\n",
            "Epoch 135/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0041 - root_mean_squared_error: 0.0638 - val_loss: 0.0116 - val_root_mean_squared_error: 0.1077\n",
            "Epoch 136/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 158ms/step - loss: 0.0041 - root_mean_squared_error: 0.0637 - val_loss: 0.0116 - val_root_mean_squared_error: 0.1076\n",
            "Epoch 137/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step - loss: 0.0040 - root_mean_squared_error: 0.0636 - val_loss: 0.0115 - val_root_mean_squared_error: 0.1074\n",
            "Epoch 138/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0040 - root_mean_squared_error: 0.0635 - val_loss: 0.0115 - val_root_mean_squared_error: 0.1070\n",
            "Epoch 139/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0040 - root_mean_squared_error: 0.0634 - val_loss: 0.0114 - val_root_mean_squared_error: 0.1067\n",
            "Epoch 140/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0040 - root_mean_squared_error: 0.0633 - val_loss: 0.0113 - val_root_mean_squared_error: 0.1064\n",
            "Epoch 141/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0040 - root_mean_squared_error: 0.0633 - val_loss: 0.0113 - val_root_mean_squared_error: 0.1062\n",
            "Epoch 142/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 350ms/step - loss: 0.0040 - root_mean_squared_error: 0.0632 - val_loss: 0.0112 - val_root_mean_squared_error: 0.1060\n",
            "Epoch 143/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 283ms/step - loss: 0.0040 - root_mean_squared_error: 0.0632 - val_loss: 0.0112 - val_root_mean_squared_error: 0.1059\n",
            "Epoch 144/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0040 - root_mean_squared_error: 0.0631 - val_loss: 0.0112 - val_root_mean_squared_error: 0.1057\n",
            "Epoch 145/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 250ms/step - loss: 0.0040 - root_mean_squared_error: 0.0631 - val_loss: 0.0111 - val_root_mean_squared_error: 0.1055\n",
            "Epoch 146/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 83ms/step - loss: 0.0040 - root_mean_squared_error: 0.0631 - val_loss: 0.0111 - val_root_mean_squared_error: 0.1052\n",
            "Epoch 147/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0040 - root_mean_squared_error: 0.0630 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1050\n",
            "Epoch 148/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 200ms/step - loss: 0.0040 - root_mean_squared_error: 0.0630 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1049\n",
            "Epoch 149/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 237ms/step - loss: 0.0040 - root_mean_squared_error: 0.0629 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1049\n",
            "Epoch 150/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 380ms/step - loss: 0.0040 - root_mean_squared_error: 0.0629 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1050\n",
            "Epoch 151/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 195ms/step - loss: 0.0039 - root_mean_squared_error: 0.0628 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1050\n",
            "Epoch 152/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0039 - root_mean_squared_error: 0.0628 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1051\n",
            "Epoch 153/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 194ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1050\n",
            "Epoch 154/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1050\n",
            "Epoch 155/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1048\n",
            "Epoch 156/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1047\n",
            "Epoch 157/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 148ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0110 - val_root_mean_squared_error: 0.1047\n",
            "Epoch 158/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1046\n",
            "Epoch 159/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 120ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1045\n",
            "Epoch 160/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 289ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1044\n",
            "Epoch 161/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 209ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1043\n",
            "Epoch 162/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 201ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1041\n",
            "Epoch 163/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1039\n",
            "Epoch 164/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 165/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 166/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 167/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 158ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 168/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 160ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 169/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 170/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 171/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 379ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 172/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 272ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 173/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 174/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 122ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 175/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1038\n",
            "Epoch 176/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1039\n",
            "Epoch 177/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1040\n",
            "Epoch 178/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1040\n",
            "Epoch 179/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 269ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1041\n",
            "Epoch 180/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1041\n",
            "Epoch 181/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1042\n",
            "Epoch 182/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1042\n",
            "Epoch 183/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 126ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1042\n",
            "Epoch 184/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 175ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1042\n",
            "Epoch 185/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1042\n",
            "Epoch 186/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1041\n",
            "Epoch 187/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1041\n",
            "Epoch 188/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1040\n",
            "Epoch 189/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 333ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1040\n",
            "Epoch 190/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 174ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1039\n",
            "Epoch 191/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1039\n",
            "Epoch 192/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 137ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1038\n",
            "Epoch 193/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 148ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1038\n",
            "Epoch 194/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1038\n",
            "Epoch 195/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 196/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 350ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 197/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 233ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 198/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 199/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 245ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 200/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 350ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 201/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 202/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 203/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 200ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 204/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 205/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 206/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 324ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 207/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 262ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 208/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 122ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 209/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 174ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 210/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 121ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 211/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0108 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 212/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 213/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 141ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 214/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 381ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 215/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 175ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 216/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 217/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 113ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 218/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 219/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 135ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 220/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 221/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 164ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 222/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 223/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 400ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 224/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 200ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 225/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 226/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1037\n",
            "Epoch 227/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 228/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 155ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 229/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 230/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 332ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 231/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 169ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 232/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 158ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 233/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 105ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 234/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 235/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 236/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 237/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 373ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 238/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 120ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 239/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 240/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 241/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 242/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 174ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 243/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 244/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 245/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 327ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1036\n",
            "Epoch 246/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 317ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 247/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 321ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 248/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 333ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 249/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 140ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 250/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 251/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 199ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 252/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 312ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 253/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 254/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 193ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 255/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 190ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 256/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 257/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 258/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 311ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 259/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 160ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 260/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 261/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 262/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 263/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 264/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 265/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 105ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 266/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 392ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 267/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 227ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 268/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 269/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 158ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 270/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 184ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 271/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 128ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 272/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 444ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 273/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 92ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1035\n",
            "Epoch 274/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 275/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 276/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 158ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 277/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 176ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 278/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 279/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 350ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 280/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 281/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 204ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 282/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 283/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 284/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 139ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 285/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 286/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 287/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 429ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 288/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 289/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 146ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 290/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 291/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 292/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 155ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 293/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 294/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 176ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 295/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 160ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 296/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 297/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 526ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 298/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 231ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 299/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 300/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 202ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1033\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "<keras.src.callbacks.history.History at 0x22272d7a610>"
            ]
          },
          "execution_count": 18,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import *\n",
        "from tensorflow.keras.callbacks import ModelCheckpoint\n",
        "from tensorflow.keras.metrics import RootMeanSquaredError\n",
        "from tensorflow.keras.optimizers import Adam\n",
        "\n",
        "\n",
        "print(type(X_train), type(y_train), X_val.shape, y_val.shape)\n",
        "simple_nn = Sequential()\n",
        "simple_nn.add(InputLayer((columns_count,)))\n",
        "simple_nn.add(Dense(2, 'relu'))\n",
        "simple_nn.add(Dense(1, 'linear'))\n",
        "\n",
        "opt = Adam(learning_rate=.1)\n",
        "cp = ModelCheckpoint('models/models/simple_nn.keras', save_best_only=True)\n",
        "simple_nn.compile(optimizer=opt, loss='mse', metrics=[RootMeanSquaredError()])\n",
        "simple_nn.fit(x=X_train, y=y_train, validation_data=(X_val, y_val), callbacks=[cp], epochs=300)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 19,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_SflsiTCGxVp",
        "outputId": "139c3d5d-829e-424b-a88a-b14f2c125328"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 92ms/step\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 85ms/step\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 56ms/step\n",
            "          0         1         2      3            4\n",
            "0 -1.104083  0.828325 -1.362770  1.104  [1.2104113]\n",
            "1  1.588802  0.828325 -1.362770  1.785  [1.8564346]\n",
            "2 -1.104083  1.548607 -1.362770  1.134  [1.2104113]\n",
            "3  1.588802  1.548607 -1.362770  1.719  [1.8550463]\n",
            "4 -0.565506  1.548607 -1.362770  1.233   [1.250418]\n",
            "5 -0.026929  0.828325 -1.362770  1.328  [1.3836436]\n",
            "6 -0.565506 -1.332522 -1.362770  1.199  [1.2302115]\n",
            "7 -0.565506 -0.612240 -1.362770  1.248  [1.2288232]\n",
            "8 -0.026929  0.108042 -1.362770  1.479  [1.3850319]\n",
            "9  1.588802  0.108042  0.733799  1.905  [1.7946277]\n",
            "\n",
            "RMSE: train: 0.09700702527020615 , valid: 0.08156414511034922\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "from tensorflow.keras.models import load_model\n",
        "\n",
        "simple_nn = load_model('models/models/simple_nn.keras')\n",
        "#prediction\n",
        "y_train_pred=simple_nn.predict(X_train)\n",
        "y_val_pred=simple_nn.predict(X_val)\n",
        "y_test_pred=simple_nn.predict(X_test)\n",
        "\n",
        "#visualisation\n",
        "visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 20,
      "metadata": {
        "id": "0QLS6aybID9Q"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 3s/step - loss: 1.6813 - root_mean_squared_error: 1.2966 - val_loss: 0.7990 - val_root_mean_squared_error: 0.8939\n",
            "Epoch 2/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 218ms/step - loss: 2.2284 - root_mean_squared_error: 1.4928 - val_loss: 0.1931 - val_root_mean_squared_error: 0.4394\n",
            "Epoch 3/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 113ms/step - loss: 0.1138 - root_mean_squared_error: 0.3374 - val_loss: 0.4818 - val_root_mean_squared_error: 0.6941\n",
            "Epoch 4/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 377ms/step - loss: 0.5365 - root_mean_squared_error: 0.7324 - val_loss: 0.4747 - val_root_mean_squared_error: 0.6890\n",
            "Epoch 5/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 478ms/step - loss: 0.6723 - root_mean_squared_error: 0.8199 - val_loss: 0.2805 - val_root_mean_squared_error: 0.5297\n",
            "Epoch 6/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 0.5520 - root_mean_squared_error: 0.7430 - val_loss: 0.1280 - val_root_mean_squared_error: 0.3578\n",
            "Epoch 7/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step - loss: 0.3776 - root_mean_squared_error: 0.6145 - val_loss: 0.2183 - val_root_mean_squared_error: 0.4672\n",
            "Epoch 8/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.3210 - root_mean_squared_error: 0.5665 - val_loss: 0.2917 - val_root_mean_squared_error: 0.5401\n",
            "Epoch 9/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 158ms/step - loss: 0.2523 - root_mean_squared_error: 0.5023 - val_loss: 0.2087 - val_root_mean_squared_error: 0.4569\n",
            "Epoch 10/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 208ms/step - loss: 0.1370 - root_mean_squared_error: 0.3702 - val_loss: 0.1085 - val_root_mean_squared_error: 0.3294\n",
            "Epoch 11/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 146ms/step - loss: 0.0728 - root_mean_squared_error: 0.2699 - val_loss: 0.0619 - val_root_mean_squared_error: 0.2488\n",
            "Epoch 12/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.0714 - root_mean_squared_error: 0.2671 - val_loss: 0.0590 - val_root_mean_squared_error: 0.2429\n",
            "Epoch 13/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 279ms/step - loss: 0.0927 - root_mean_squared_error: 0.3044 - val_loss: 0.0735 - val_root_mean_squared_error: 0.2711\n",
            "Epoch 14/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 106ms/step - loss: 0.1072 - root_mean_squared_error: 0.3274 - val_loss: 0.0866 - val_root_mean_squared_error: 0.2943\n",
            "Epoch 15/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step - loss: 0.1102 - root_mean_squared_error: 0.3320 - val_loss: 0.0889 - val_root_mean_squared_error: 0.2981\n",
            "Epoch 16/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.1032 - root_mean_squared_error: 0.3212 - val_loss: 0.0762 - val_root_mean_squared_error: 0.2760\n",
            "Epoch 17/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 235ms/step - loss: 0.0874 - root_mean_squared_error: 0.2957 - val_loss: 0.0528 - val_root_mean_squared_error: 0.2298\n",
            "Epoch 18/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 0.0652 - root_mean_squared_error: 0.2554 - val_loss: 0.0282 - val_root_mean_squared_error: 0.1681\n",
            "Epoch 19/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 180ms/step - loss: 0.0418 - root_mean_squared_error: 0.2044 - val_loss: 0.0161 - val_root_mean_squared_error: 0.1270\n",
            "Epoch 20/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0247 - root_mean_squared_error: 0.1572 - val_loss: 0.0260 - val_root_mean_squared_error: 0.1611\n",
            "Epoch 21/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 147ms/step - loss: 0.0201 - root_mean_squared_error: 0.1417 - val_loss: 0.0519 - val_root_mean_squared_error: 0.2278\n",
            "Epoch 22/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0259 - root_mean_squared_error: 0.1611 - val_loss: 0.0716 - val_root_mean_squared_error: 0.2676\n",
            "Epoch 23/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 189ms/step - loss: 0.0312 - root_mean_squared_error: 0.1766 - val_loss: 0.0680 - val_root_mean_squared_error: 0.2609\n",
            "Epoch 24/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.0283 - root_mean_squared_error: 0.1682 - val_loss: 0.0484 - val_root_mean_squared_error: 0.2200\n",
            "Epoch 25/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step - loss: 0.0224 - root_mean_squared_error: 0.1498 - val_loss: 0.0307 - val_root_mean_squared_error: 0.1753\n",
            "Epoch 26/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 224ms/step - loss: 0.0216 - root_mean_squared_error: 0.1471 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1508\n",
            "Epoch 27/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 309ms/step - loss: 0.0247 - root_mean_squared_error: 0.1573 - val_loss: 0.0208 - val_root_mean_squared_error: 0.1442\n",
            "Epoch 28/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 0.0248 - root_mean_squared_error: 0.1576 - val_loss: 0.0216 - val_root_mean_squared_error: 0.1468\n",
            "Epoch 29/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step - loss: 0.0189 - root_mean_squared_error: 0.1373 - val_loss: 0.0274 - val_root_mean_squared_error: 0.1656\n",
            "Epoch 30/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step - loss: 0.0111 - root_mean_squared_error: 0.1054 - val_loss: 0.0404 - val_root_mean_squared_error: 0.2010\n",
            "Epoch 31/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step - loss: 0.0079 - root_mean_squared_error: 0.0891 - val_loss: 0.0539 - val_root_mean_squared_error: 0.2321\n",
            "Epoch 32/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0101 - root_mean_squared_error: 0.1004 - val_loss: 0.0561 - val_root_mean_squared_error: 0.2369\n",
            "Epoch 33/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0121 - root_mean_squared_error: 0.1100 - val_loss: 0.0440 - val_root_mean_squared_error: 0.2098\n",
            "Epoch 34/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step - loss: 0.0105 - root_mean_squared_error: 0.1027 - val_loss: 0.0269 - val_root_mean_squared_error: 0.1640\n",
            "Epoch 35/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.0080 - root_mean_squared_error: 0.0896 - val_loss: 0.0155 - val_root_mean_squared_error: 0.1244\n",
            "Epoch 36/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 154ms/step - loss: 0.0083 - root_mean_squared_error: 0.0913 - val_loss: 0.0116 - val_root_mean_squared_error: 0.1076\n",
            "Epoch 37/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 0.0109 - root_mean_squared_error: 0.1044 - val_loss: 0.0109 - val_root_mean_squared_error: 0.1045\n",
            "Epoch 38/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 345ms/step - loss: 0.0122 - root_mean_squared_error: 0.1105 - val_loss: 0.0107 - val_root_mean_squared_error: 0.1034\n",
            "Epoch 39/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0105 - root_mean_squared_error: 0.1027 - val_loss: 0.0125 - val_root_mean_squared_error: 0.1120\n",
            "Epoch 40/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0078 - root_mean_squared_error: 0.0882 - val_loss: 0.0186 - val_root_mean_squared_error: 0.1364\n",
            "Epoch 41/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 130ms/step - loss: 0.0066 - root_mean_squared_error: 0.0810 - val_loss: 0.0266 - val_root_mean_squared_error: 0.1630\n",
            "Epoch 42/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0069 - root_mean_squared_error: 0.0828 - val_loss: 0.0307 - val_root_mean_squared_error: 0.1753\n",
            "Epoch 43/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.0065 - root_mean_squared_error: 0.0806 - val_loss: 0.0284 - val_root_mean_squared_error: 0.1685\n",
            "Epoch 44/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 189ms/step - loss: 0.0047 - root_mean_squared_error: 0.0688 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1507\n",
            "Epoch 45/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 0.0034 - root_mean_squared_error: 0.0582 - val_loss: 0.0181 - val_root_mean_squared_error: 0.1347\n",
            "Epoch 46/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0037 - root_mean_squared_error: 0.0612 - val_loss: 0.0165 - val_root_mean_squared_error: 0.1283\n",
            "Epoch 47/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 113ms/step - loss: 0.0048 - root_mean_squared_error: 0.0689 - val_loss: 0.0175 - val_root_mean_squared_error: 0.1324\n",
            "Epoch 48/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 434ms/step - loss: 0.0049 - root_mean_squared_error: 0.0700 - val_loss: 0.0214 - val_root_mean_squared_error: 0.1464\n",
            "Epoch 49/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 218ms/step - loss: 0.0043 - root_mean_squared_error: 0.0657 - val_loss: 0.0276 - val_root_mean_squared_error: 0.1663\n",
            "Epoch 50/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0042 - root_mean_squared_error: 0.0649 - val_loss: 0.0331 - val_root_mean_squared_error: 0.1819\n",
            "Epoch 51/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 0.0047 - root_mean_squared_error: 0.0686 - val_loss: 0.0339 - val_root_mean_squared_error: 0.1841\n",
            "Epoch 52/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 174ms/step - loss: 0.0047 - root_mean_squared_error: 0.0689 - val_loss: 0.0295 - val_root_mean_squared_error: 0.1717\n",
            "Epoch 53/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 135ms/step - loss: 0.0040 - root_mean_squared_error: 0.0633 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1518\n",
            "Epoch 54/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0033 - root_mean_squared_error: 0.0578 - val_loss: 0.0181 - val_root_mean_squared_error: 0.1345\n",
            "Epoch 55/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0033 - root_mean_squared_error: 0.0575 - val_loss: 0.0157 - val_root_mean_squared_error: 0.1254\n",
            "Epoch 56/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0034 - root_mean_squared_error: 0.0581 - val_loss: 0.0156 - val_root_mean_squared_error: 0.1248\n",
            "Epoch 57/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0031 - root_mean_squared_error: 0.0554 - val_loss: 0.0172 - val_root_mean_squared_error: 0.1311\n",
            "Epoch 58/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0027 - root_mean_squared_error: 0.0522 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1400\n",
            "Epoch 59/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0028 - root_mean_squared_error: 0.0528 - val_loss: 0.0211 - val_root_mean_squared_error: 0.1453\n",
            "Epoch 60/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0030 - root_mean_squared_error: 0.0551 - val_loss: 0.0205 - val_root_mean_squared_error: 0.1430\n",
            "Epoch 61/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 83ms/step - loss: 0.0030 - root_mean_squared_error: 0.0545 - val_loss: 0.0181 - val_root_mean_squared_error: 0.1346\n",
            "Epoch 62/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step - loss: 0.0027 - root_mean_squared_error: 0.0519 - val_loss: 0.0157 - val_root_mean_squared_error: 0.1255\n",
            "Epoch 63/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 191ms/step - loss: 0.0026 - root_mean_squared_error: 0.0509 - val_loss: 0.0146 - val_root_mean_squared_error: 0.1206\n",
            "Epoch 64/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0026 - root_mean_squared_error: 0.0514 - val_loss: 0.0149 - val_root_mean_squared_error: 0.1222\n",
            "Epoch 65/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0026 - root_mean_squared_error: 0.0505 - val_loss: 0.0169 - val_root_mean_squared_error: 0.1300\n",
            "Epoch 66/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 282ms/step - loss: 0.0023 - root_mean_squared_error: 0.0480 - val_loss: 0.0200 - val_root_mean_squared_error: 0.1413\n",
            "Epoch 67/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0022 - root_mean_squared_error: 0.0466 - val_loss: 0.0228 - val_root_mean_squared_error: 0.1510\n",
            "Epoch 68/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0022 - root_mean_squared_error: 0.0470 - val_loss: 0.0240 - val_root_mean_squared_error: 0.1549\n",
            "Epoch 69/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0022 - root_mean_squared_error: 0.0468 - val_loss: 0.0232 - val_root_mean_squared_error: 0.1524\n",
            "Epoch 70/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0021 - root_mean_squared_error: 0.0453 - val_loss: 0.0215 - val_root_mean_squared_error: 0.1466\n",
            "Epoch 71/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0020 - root_mean_squared_error: 0.0443 - val_loss: 0.0202 - val_root_mean_squared_error: 0.1420\n",
            "Epoch 72/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0020 - root_mean_squared_error: 0.0446 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1412\n",
            "Epoch 73/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0020 - root_mean_squared_error: 0.0443 - val_loss: 0.0209 - val_root_mean_squared_error: 0.1445\n",
            "Epoch 74/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 121ms/step - loss: 0.0018 - root_mean_squared_error: 0.0428 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1497\n",
            "Epoch 75/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0017 - root_mean_squared_error: 0.0417 - val_loss: 0.0235 - val_root_mean_squared_error: 0.1535\n",
            "Epoch 76/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0017 - root_mean_squared_error: 0.0416 - val_loss: 0.0234 - val_root_mean_squared_error: 0.1529\n",
            "Epoch 77/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0017 - root_mean_squared_error: 0.0411 - val_loss: 0.0219 - val_root_mean_squared_error: 0.1480\n",
            "Epoch 78/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step - loss: 0.0016 - root_mean_squared_error: 0.0399 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1412\n",
            "Epoch 79/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 172ms/step - loss: 0.0015 - root_mean_squared_error: 0.0392 - val_loss: 0.0184 - val_root_mean_squared_error: 0.1358\n",
            "Epoch 80/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 113ms/step - loss: 0.0015 - root_mean_squared_error: 0.0392 - val_loss: 0.0179 - val_root_mean_squared_error: 0.1338\n",
            "Epoch 81/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0015 - root_mean_squared_error: 0.0389 - val_loss: 0.0183 - val_root_mean_squared_error: 0.1352\n",
            "Epoch 82/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 83ms/step - loss: 0.0015 - root_mean_squared_error: 0.0382 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1384\n",
            "Epoch 83/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - loss: 0.0014 - root_mean_squared_error: 0.0378 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1410\n",
            "Epoch 84/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0014 - root_mean_squared_error: 0.0378 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1412\n",
            "Epoch 85/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.0014 - root_mean_squared_error: 0.0374 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1391\n",
            "Epoch 86/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 385ms/step - loss: 0.0014 - root_mean_squared_error: 0.0367 - val_loss: 0.0186 - val_root_mean_squared_error: 0.1365\n",
            "Epoch 87/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 266ms/step - loss: 0.0013 - root_mean_squared_error: 0.0364 - val_loss: 0.0184 - val_root_mean_squared_error: 0.1356\n",
            "Epoch 88/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0013 - root_mean_squared_error: 0.0362 - val_loss: 0.0188 - val_root_mean_squared_error: 0.1371\n",
            "Epoch 89/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 138ms/step - loss: 0.0013 - root_mean_squared_error: 0.0358 - val_loss: 0.0198 - val_root_mean_squared_error: 0.1407\n",
            "Epoch 90/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 0.0012 - root_mean_squared_error: 0.0353 - val_loss: 0.0209 - val_root_mean_squared_error: 0.1447\n",
            "Epoch 91/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 136ms/step - loss: 0.0012 - root_mean_squared_error: 0.0352 - val_loss: 0.0216 - val_root_mean_squared_error: 0.1471\n",
            "Epoch 92/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0012 - root_mean_squared_error: 0.0351 - val_loss: 0.0217 - val_root_mean_squared_error: 0.1472\n",
            "Epoch 93/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0012 - root_mean_squared_error: 0.0349 - val_loss: 0.0212 - val_root_mean_squared_error: 0.1456\n",
            "Epoch 94/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0012 - root_mean_squared_error: 0.0346 - val_loss: 0.0207 - val_root_mean_squared_error: 0.1439\n",
            "Epoch 95/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step - loss: 0.0012 - root_mean_squared_error: 0.0346 - val_loss: 0.0206 - val_root_mean_squared_error: 0.1434\n",
            "Epoch 96/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 98ms/step - loss: 0.0012 - root_mean_squared_error: 0.0345 - val_loss: 0.0209 - val_root_mean_squared_error: 0.1445\n",
            "Epoch 97/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 97ms/step - loss: 0.0012 - root_mean_squared_error: 0.0343 - val_loss: 0.0214 - val_root_mean_squared_error: 0.1462\n",
            "Epoch 98/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 173ms/step - loss: 0.0012 - root_mean_squared_error: 0.0341 - val_loss: 0.0217 - val_root_mean_squared_error: 0.1473\n",
            "Epoch 99/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 300ms/step - loss: 0.0012 - root_mean_squared_error: 0.0340 - val_loss: 0.0216 - val_root_mean_squared_error: 0.1469\n",
            "Epoch 100/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 0.0011 - root_mean_squared_error: 0.0338 - val_loss: 0.0210 - val_root_mean_squared_error: 0.1451\n",
            "Epoch 101/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 87ms/step - loss: 0.0011 - root_mean_squared_error: 0.0336 - val_loss: 0.0204 - val_root_mean_squared_error: 0.1429\n",
            "Epoch 102/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 174ms/step - loss: 0.0011 - root_mean_squared_error: 0.0335 - val_loss: 0.0200 - val_root_mean_squared_error: 0.1416\n",
            "Epoch 103/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0011 - root_mean_squared_error: 0.0334 - val_loss: 0.0200 - val_root_mean_squared_error: 0.1416\n",
            "Epoch 104/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0011 - root_mean_squared_error: 0.0332 - val_loss: 0.0203 - val_root_mean_squared_error: 0.1426\n",
            "Epoch 105/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 0.0011 - root_mean_squared_error: 0.0331 - val_loss: 0.0207 - val_root_mean_squared_error: 0.1437\n",
            "Epoch 106/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0011 - root_mean_squared_error: 0.0330 - val_loss: 0.0207 - val_root_mean_squared_error: 0.1440\n",
            "Epoch 107/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 0.0011 - root_mean_squared_error: 0.0329 - val_loss: 0.0206 - val_root_mean_squared_error: 0.1434\n",
            "Epoch 108/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0011 - root_mean_squared_error: 0.0328 - val_loss: 0.0203 - val_root_mean_squared_error: 0.1425\n",
            "Epoch 109/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0011 - root_mean_squared_error: 0.0326 - val_loss: 0.0202 - val_root_mean_squared_error: 0.1420\n",
            "Epoch 110/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 200ms/step - loss: 0.0011 - root_mean_squared_error: 0.0325 - val_loss: 0.0203 - val_root_mean_squared_error: 0.1425\n",
            "Epoch 111/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 350ms/step - loss: 0.0010 - root_mean_squared_error: 0.0324 - val_loss: 0.0206 - val_root_mean_squared_error: 0.1436\n",
            "Epoch 112/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 318ms/step - loss: 0.0010 - root_mean_squared_error: 0.0322 - val_loss: 0.0210 - val_root_mean_squared_error: 0.1448\n",
            "Epoch 113/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0010 - root_mean_squared_error: 0.0321 - val_loss: 0.0211 - val_root_mean_squared_error: 0.1453\n",
            "Epoch 114/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 148ms/step - loss: 0.0010 - root_mean_squared_error: 0.0320 - val_loss: 0.0210 - val_root_mean_squared_error: 0.1450\n",
            "Epoch 115/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0010 - root_mean_squared_error: 0.0319 - val_loss: 0.0208 - val_root_mean_squared_error: 0.1442\n",
            "Epoch 116/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0010 - root_mean_squared_error: 0.0318 - val_loss: 0.0206 - val_root_mean_squared_error: 0.1436\n",
            "Epoch 117/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0010 - root_mean_squared_error: 0.0316 - val_loss: 0.0206 - val_root_mean_squared_error: 0.1436\n",
            "Epoch 118/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 9.9431e-04 - root_mean_squared_error: 0.0315 - val_loss: 0.0207 - val_root_mean_squared_error: 0.1439\n",
            "Epoch 119/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 9.8620e-04 - root_mean_squared_error: 0.0314 - val_loss: 0.0208 - val_root_mean_squared_error: 0.1443\n",
            "Epoch 120/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 9.8284e-04 - root_mean_squared_error: 0.0314 - val_loss: 0.0208 - val_root_mean_squared_error: 0.1442\n",
            "Epoch 121/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 128ms/step - loss: 9.7921e-04 - root_mean_squared_error: 0.0313 - val_loss: 0.0206 - val_root_mean_squared_error: 0.1436\n",
            "Epoch 122/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 9.7343e-04 - root_mean_squared_error: 0.0312 - val_loss: 0.0204 - val_root_mean_squared_error: 0.1429\n",
            "Epoch 123/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 9.6711e-04 - root_mean_squared_error: 0.0311 - val_loss: 0.0203 - val_root_mean_squared_error: 0.1423\n",
            "Epoch 124/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 305ms/step - loss: 9.6031e-04 - root_mean_squared_error: 0.0310 - val_loss: 0.0202 - val_root_mean_squared_error: 0.1423\n",
            "Epoch 125/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 171ms/step - loss: 9.5615e-04 - root_mean_squared_error: 0.0309 - val_loss: 0.0204 - val_root_mean_squared_error: 0.1427\n",
            "Epoch 126/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 9.5139e-04 - root_mean_squared_error: 0.0308 - val_loss: 0.0205 - val_root_mean_squared_error: 0.1430\n",
            "Epoch 127/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 9.4656e-04 - root_mean_squared_error: 0.0308 - val_loss: 0.0205 - val_root_mean_squared_error: 0.1431\n",
            "Epoch 128/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 9.4097e-04 - root_mean_squared_error: 0.0307 - val_loss: 0.0204 - val_root_mean_squared_error: 0.1427\n",
            "Epoch 129/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 9.3458e-04 - root_mean_squared_error: 0.0306 - val_loss: 0.0202 - val_root_mean_squared_error: 0.1422\n",
            "Epoch 130/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 9.2862e-04 - root_mean_squared_error: 0.0305 - val_loss: 0.0202 - val_root_mean_squared_error: 0.1420\n",
            "Epoch 131/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 9.2345e-04 - root_mean_squared_error: 0.0304 - val_loss: 0.0202 - val_root_mean_squared_error: 0.1421\n",
            "Epoch 132/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 181ms/step - loss: 9.1848e-04 - root_mean_squared_error: 0.0303 - val_loss: 0.0203 - val_root_mean_squared_error: 0.1424\n",
            "Epoch 133/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 9.1424e-04 - root_mean_squared_error: 0.0302 - val_loss: 0.0203 - val_root_mean_squared_error: 0.1426\n",
            "Epoch 134/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 9.0808e-04 - root_mean_squared_error: 0.0301 - val_loss: 0.0203 - val_root_mean_squared_error: 0.1426\n",
            "Epoch 135/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 148ms/step - loss: 9.0284e-04 - root_mean_squared_error: 0.0300 - val_loss: 0.0202 - val_root_mean_squared_error: 0.1423\n",
            "Epoch 136/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 320ms/step - loss: 8.9738e-04 - root_mean_squared_error: 0.0300 - val_loss: 0.0201 - val_root_mean_squared_error: 0.1419\n",
            "Epoch 137/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 8.9302e-04 - root_mean_squared_error: 0.0299 - val_loss: 0.0201 - val_root_mean_squared_error: 0.1417\n",
            "Epoch 138/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 8.8781e-04 - root_mean_squared_error: 0.0298 - val_loss: 0.0201 - val_root_mean_squared_error: 0.1417\n",
            "Epoch 139/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 8.8397e-04 - root_mean_squared_error: 0.0297 - val_loss: 0.0201 - val_root_mean_squared_error: 0.1418\n",
            "Epoch 140/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 8.7969e-04 - root_mean_squared_error: 0.0297 - val_loss: 0.0201 - val_root_mean_squared_error: 0.1420\n",
            "Epoch 141/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 8.7458e-04 - root_mean_squared_error: 0.0296 - val_loss: 0.0201 - val_root_mean_squared_error: 0.1418\n",
            "Epoch 142/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 164ms/step - loss: 8.6961e-04 - root_mean_squared_error: 0.0295 - val_loss: 0.0200 - val_root_mean_squared_error: 0.1415\n",
            "Epoch 143/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 8.6699e-04 - root_mean_squared_error: 0.0294 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1412\n",
            "Epoch 144/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 8.6346e-04 - root_mean_squared_error: 0.0294 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1411\n",
            "Epoch 145/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 8.5839e-04 - root_mean_squared_error: 0.0293 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1412\n",
            "Epoch 146/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 281ms/step - loss: 8.5204e-04 - root_mean_squared_error: 0.0292 - val_loss: 0.0200 - val_root_mean_squared_error: 0.1414\n",
            "Epoch 147/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 451ms/step - loss: 8.4810e-04 - root_mean_squared_error: 0.0291 - val_loss: 0.0200 - val_root_mean_squared_error: 0.1416\n",
            "Epoch 148/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 299ms/step - loss: 8.4425e-04 - root_mean_squared_error: 0.0291 - val_loss: 0.0200 - val_root_mean_squared_error: 0.1415\n",
            "Epoch 149/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 291ms/step - loss: 8.4025e-04 - root_mean_squared_error: 0.0290 - val_loss: 0.0200 - val_root_mean_squared_error: 0.1413\n",
            "Epoch 150/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 176ms/step - loss: 8.3549e-04 - root_mean_squared_error: 0.0289 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1410\n",
            "Epoch 151/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 8.3200e-04 - root_mean_squared_error: 0.0288 - val_loss: 0.0198 - val_root_mean_squared_error: 0.1409\n",
            "Epoch 152/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 128ms/step - loss: 8.2778e-04 - root_mean_squared_error: 0.0288 - val_loss: 0.0198 - val_root_mean_squared_error: 0.1409\n",
            "Epoch 153/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 147ms/step - loss: 8.2321e-04 - root_mean_squared_error: 0.0287 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1410\n",
            "Epoch 154/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 8.1959e-04 - root_mean_squared_error: 0.0286 - val_loss: 0.0199 - val_root_mean_squared_error: 0.1410\n",
            "Epoch 155/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 8.1542e-04 - root_mean_squared_error: 0.0286 - val_loss: 0.0198 - val_root_mean_squared_error: 0.1408\n",
            "Epoch 156/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 8.1184e-04 - root_mean_squared_error: 0.0285 - val_loss: 0.0198 - val_root_mean_squared_error: 0.1405\n",
            "Epoch 157/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 300ms/step - loss: 8.0785e-04 - root_mean_squared_error: 0.0284 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1403\n",
            "Epoch 158/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 8.0399e-04 - root_mean_squared_error: 0.0284 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1404\n",
            "Epoch 159/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 158ms/step - loss: 8.0023e-04 - root_mean_squared_error: 0.0283 - val_loss: 0.0198 - val_root_mean_squared_error: 0.1406\n",
            "Epoch 160/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 7.9576e-04 - root_mean_squared_error: 0.0282 - val_loss: 0.0198 - val_root_mean_squared_error: 0.1407\n",
            "Epoch 161/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 122ms/step - loss: 7.9358e-04 - root_mean_squared_error: 0.0282 - val_loss: 0.0198 - val_root_mean_squared_error: 0.1406\n",
            "Epoch 162/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 7.8996e-04 - root_mean_squared_error: 0.0281 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1404\n",
            "Epoch 163/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 156ms/step - loss: 7.8536e-04 - root_mean_squared_error: 0.0280 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1402\n",
            "Epoch 164/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 7.8244e-04 - root_mean_squared_error: 0.0280 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1402\n",
            "Epoch 165/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 7.7875e-04 - root_mean_squared_error: 0.0279 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1403\n",
            "Epoch 166/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 7.7540e-04 - root_mean_squared_error: 0.0278 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1403\n",
            "Epoch 167/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 94ms/step - loss: 7.7151e-04 - root_mean_squared_error: 0.0278 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1402\n",
            "Epoch 168/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step - loss: 7.6807e-04 - root_mean_squared_error: 0.0277 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1401\n",
            "Epoch 169/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 125ms/step - loss: 7.6496e-04 - root_mean_squared_error: 0.0277 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1400\n",
            "Epoch 170/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 417ms/step - loss: 7.6221e-04 - root_mean_squared_error: 0.0276 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1400\n",
            "Epoch 171/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 7.5790e-04 - root_mean_squared_error: 0.0275 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1401\n",
            "Epoch 172/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 177ms/step - loss: 7.5484e-04 - root_mean_squared_error: 0.0275 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1400\n",
            "Epoch 173/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 7.5216e-04 - root_mean_squared_error: 0.0274 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1399\n",
            "Epoch 174/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 7.4917e-04 - root_mean_squared_error: 0.0274 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1398\n",
            "Epoch 175/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 128ms/step - loss: 7.4587e-04 - root_mean_squared_error: 0.0273 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1398\n",
            "Epoch 176/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 7.4221e-04 - root_mean_squared_error: 0.0272 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1397\n",
            "Epoch 177/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 175ms/step - loss: 7.3870e-04 - root_mean_squared_error: 0.0272 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1398\n",
            "Epoch 178/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 7.3585e-04 - root_mean_squared_error: 0.0271 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1398\n",
            "Epoch 179/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 196ms/step - loss: 7.3260e-04 - root_mean_squared_error: 0.0271 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1398\n",
            "Epoch 180/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 106ms/step - loss: 7.2967e-04 - root_mean_squared_error: 0.0270 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1397\n",
            "Epoch 181/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 360ms/step - loss: 7.2616e-04 - root_mean_squared_error: 0.0269 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1396\n",
            "Epoch 182/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 7.2292e-04 - root_mean_squared_error: 0.0269 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1394\n",
            "Epoch 183/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 7.2005e-04 - root_mean_squared_error: 0.0268 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1393\n",
            "Epoch 184/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 7.1717e-04 - root_mean_squared_error: 0.0268 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1393\n",
            "Epoch 185/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 7.1394e-04 - root_mean_squared_error: 0.0267 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1394\n",
            "Epoch 186/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 84ms/step - loss: 7.1247e-04 - root_mean_squared_error: 0.0267 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1393\n",
            "Epoch 187/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 94ms/step - loss: 7.0914e-04 - root_mean_squared_error: 0.0266 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1391\n",
            "Epoch 188/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 7.0496e-04 - root_mean_squared_error: 0.0266 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1389\n",
            "Epoch 189/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 217ms/step - loss: 7.0223e-04 - root_mean_squared_error: 0.0265 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1389\n",
            "Epoch 190/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 6.9918e-04 - root_mean_squared_error: 0.0264 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 191/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 366ms/step - loss: 6.9651e-04 - root_mean_squared_error: 0.0264 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 192/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 6.9366e-04 - root_mean_squared_error: 0.0263 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 193/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 6.9093e-04 - root_mean_squared_error: 0.0263 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1388\n",
            "Epoch 194/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 6.8752e-04 - root_mean_squared_error: 0.0262 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1386\n",
            "Epoch 195/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 6.8591e-04 - root_mean_squared_error: 0.0262 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1385\n",
            "Epoch 196/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 6.8327e-04 - root_mean_squared_error: 0.0261 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1385\n",
            "Epoch 197/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 6.8002e-04 - root_mean_squared_error: 0.0261 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1386\n",
            "Epoch 198/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 122ms/step - loss: 6.7774e-04 - root_mean_squared_error: 0.0260 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1387\n",
            "Epoch 199/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 6.7467e-04 - root_mean_squared_error: 0.0260 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1386\n",
            "Epoch 200/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 123ms/step - loss: 6.7226e-04 - root_mean_squared_error: 0.0259 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1384\n",
            "Epoch 201/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 366ms/step - loss: 6.6952e-04 - root_mean_squared_error: 0.0259 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1383\n",
            "Epoch 202/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 193ms/step - loss: 6.6746e-04 - root_mean_squared_error: 0.0258 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1383\n",
            "Epoch 203/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 6.6437e-04 - root_mean_squared_error: 0.0258 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1384\n",
            "Epoch 204/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 6.6145e-04 - root_mean_squared_error: 0.0257 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1384\n",
            "Epoch 205/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 6.5884e-04 - root_mean_squared_error: 0.0257 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1383\n",
            "Epoch 206/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 6.5738e-04 - root_mean_squared_error: 0.0256 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1381\n",
            "Epoch 207/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step - loss: 6.5504e-04 - root_mean_squared_error: 0.0256 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1381\n",
            "Epoch 208/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 6.5206e-04 - root_mean_squared_error: 0.0255 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1382\n",
            "Epoch 209/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 394ms/step - loss: 6.4932e-04 - root_mean_squared_error: 0.0255 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1382\n",
            "Epoch 210/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 6.4713e-04 - root_mean_squared_error: 0.0254 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1381\n",
            "Epoch 211/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 6.4411e-04 - root_mean_squared_error: 0.0254 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 212/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 6.4220e-04 - root_mean_squared_error: 0.0253 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 213/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 6.3986e-04 - root_mean_squared_error: 0.0253 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 214/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 309ms/step - loss: 6.3672e-04 - root_mean_squared_error: 0.0252 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1381\n",
            "Epoch 215/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 6.3486e-04 - root_mean_squared_error: 0.0252 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 216/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 283ms/step - loss: 6.3286e-04 - root_mean_squared_error: 0.0252 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 217/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 283ms/step - loss: 6.3049e-04 - root_mean_squared_error: 0.0251 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1379\n",
            "Epoch 218/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 6.2736e-04 - root_mean_squared_error: 0.0250 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1379\n",
            "Epoch 219/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 6.2630e-04 - root_mean_squared_error: 0.0250 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1379\n",
            "Epoch 220/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 6.2443e-04 - root_mean_squared_error: 0.0250 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1379\n",
            "Epoch 221/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step - loss: 6.2215e-04 - root_mean_squared_error: 0.0249 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1378\n",
            "Epoch 222/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - loss: 6.1877e-04 - root_mean_squared_error: 0.0249 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1377\n",
            "Epoch 223/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 6.1774e-04 - root_mean_squared_error: 0.0249 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1376\n",
            "Epoch 224/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 303ms/step - loss: 6.1622e-04 - root_mean_squared_error: 0.0248 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1376\n",
            "Epoch 225/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 6.1309e-04 - root_mean_squared_error: 0.0248 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1378\n",
            "Epoch 226/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 82ms/step - loss: 6.1017e-04 - root_mean_squared_error: 0.0247 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 227/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 6.0821e-04 - root_mean_squared_error: 0.0247 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1381\n",
            "Epoch 228/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 6.0555e-04 - root_mean_squared_error: 0.0246 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1378\n",
            "Epoch 229/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 6.0285e-04 - root_mean_squared_error: 0.0246 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1376\n",
            "Epoch 230/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 143ms/step - loss: 6.0098e-04 - root_mean_squared_error: 0.0245 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1375\n",
            "Epoch 231/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 174ms/step - loss: 5.9811e-04 - root_mean_squared_error: 0.0245 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1376\n",
            "Epoch 232/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 317ms/step - loss: 5.9661e-04 - root_mean_squared_error: 0.0244 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1377\n",
            "Epoch 233/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 234ms/step - loss: 5.9503e-04 - root_mean_squared_error: 0.0244 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1377\n",
            "Epoch 234/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 97ms/step - loss: 5.9225e-04 - root_mean_squared_error: 0.0243 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1377\n",
            "Epoch 235/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 192ms/step - loss: 5.8952e-04 - root_mean_squared_error: 0.0243 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1377\n",
            "Epoch 236/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 244ms/step - loss: 5.8744e-04 - root_mean_squared_error: 0.0242 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1377\n",
            "Epoch 237/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 216ms/step - loss: 5.8567e-04 - root_mean_squared_error: 0.0242 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1379\n",
            "Epoch 238/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 5.8279e-04 - root_mean_squared_error: 0.0241 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 239/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 195ms/step - loss: 5.8103e-04 - root_mean_squared_error: 0.0241 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1379\n",
            "Epoch 240/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 400ms/step - loss: 5.7896e-04 - root_mean_squared_error: 0.0241 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1378\n",
            "Epoch 241/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 301ms/step - loss: 5.7601e-04 - root_mean_squared_error: 0.0240 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1376\n",
            "Epoch 242/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 135ms/step - loss: 5.7372e-04 - root_mean_squared_error: 0.0240 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1376\n",
            "Epoch 243/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 5.7161e-04 - root_mean_squared_error: 0.0239 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1377\n",
            "Epoch 244/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 5.6952e-04 - root_mean_squared_error: 0.0239 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1378\n",
            "Epoch 245/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 200ms/step - loss: 5.6750e-04 - root_mean_squared_error: 0.0238 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1379\n",
            "Epoch 246/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 5.6641e-04 - root_mean_squared_error: 0.0238 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1378\n",
            "Epoch 247/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 367ms/step - loss: 5.6414e-04 - root_mean_squared_error: 0.0238 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1376\n",
            "Epoch 248/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 5.6201e-04 - root_mean_squared_error: 0.0237 - val_loss: 0.0189 - val_root_mean_squared_error: 0.1376\n",
            "Epoch 249/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 5.5949e-04 - root_mean_squared_error: 0.0237 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1378\n",
            "Epoch 250/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 5.5853e-04 - root_mean_squared_error: 0.0236 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1379\n",
            "Epoch 251/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 193ms/step - loss: 5.5650e-04 - root_mean_squared_error: 0.0236 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 252/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 5.5372e-04 - root_mean_squared_error: 0.0235 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 253/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 5.5191e-04 - root_mean_squared_error: 0.0235 - val_loss: 0.0190 - val_root_mean_squared_error: 0.1380\n",
            "Epoch 254/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 356ms/step - loss: 5.4990e-04 - root_mean_squared_error: 0.0234 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1381\n",
            "Epoch 255/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 5.4729e-04 - root_mean_squared_error: 0.0234 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1382\n",
            "Epoch 256/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 5.4587e-04 - root_mean_squared_error: 0.0234 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1382\n",
            "Epoch 257/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 5.4375e-04 - root_mean_squared_error: 0.0233 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1383\n",
            "Epoch 258/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 5.4160e-04 - root_mean_squared_error: 0.0233 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1384\n",
            "Epoch 259/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 130ms/step - loss: 5.3982e-04 - root_mean_squared_error: 0.0232 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1385\n",
            "Epoch 260/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 5.3854e-04 - root_mean_squared_error: 0.0232 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1385\n",
            "Epoch 261/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 5.3654e-04 - root_mean_squared_error: 0.0232 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1384\n",
            "Epoch 262/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 322ms/step - loss: 5.3440e-04 - root_mean_squared_error: 0.0231 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1384\n",
            "Epoch 263/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 264ms/step - loss: 5.3358e-04 - root_mean_squared_error: 0.0231 - val_loss: 0.0191 - val_root_mean_squared_error: 0.1383\n",
            "Epoch 264/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 303ms/step - loss: 5.3210e-04 - root_mean_squared_error: 0.0231 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1384\n",
            "Epoch 265/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 170ms/step - loss: 5.2982e-04 - root_mean_squared_error: 0.0230 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1386\n",
            "Epoch 266/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 184ms/step - loss: 5.2744e-04 - root_mean_squared_error: 0.0230 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1388\n",
            "Epoch 267/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 304ms/step - loss: 5.2670e-04 - root_mean_squared_error: 0.0229 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 268/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 5.2467e-04 - root_mean_squared_error: 0.0229 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 269/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 381ms/step - loss: 5.2284e-04 - root_mean_squared_error: 0.0229 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 270/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 327ms/step - loss: 5.2172e-04 - root_mean_squared_error: 0.0228 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 271/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step - loss: 5.1877e-04 - root_mean_squared_error: 0.0228 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1389\n",
            "Epoch 272/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 5.1680e-04 - root_mean_squared_error: 0.0227 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1388\n",
            "Epoch 273/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - loss: 5.1526e-04 - root_mean_squared_error: 0.0227 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1387\n",
            "Epoch 274/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 227ms/step - loss: 5.1383e-04 - root_mean_squared_error: 0.0227 - val_loss: 0.0192 - val_root_mean_squared_error: 0.1387\n",
            "Epoch 275/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 363ms/step - loss: 5.1157e-04 - root_mean_squared_error: 0.0226 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1388\n",
            "Epoch 276/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 439ms/step - loss: 5.1030e-04 - root_mean_squared_error: 0.0226 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1389\n",
            "Epoch 277/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 456ms/step - loss: 5.0853e-04 - root_mean_squared_error: 0.0226 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1389\n",
            "Epoch 278/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 153ms/step - loss: 5.0664e-04 - root_mean_squared_error: 0.0225 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 279/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 130ms/step - loss: 5.0585e-04 - root_mean_squared_error: 0.0225 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1391\n",
            "Epoch 280/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 5.0270e-04 - root_mean_squared_error: 0.0224 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1392\n",
            "Epoch 281/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 181ms/step - loss: 5.0162e-04 - root_mean_squared_error: 0.0224 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1391\n",
            "Epoch 282/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 83ms/step - loss: 5.0020e-04 - root_mean_squared_error: 0.0224 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 283/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 4.9736e-04 - root_mean_squared_error: 0.0223 - val_loss: 0.0193 - val_root_mean_squared_error: 0.1390\n",
            "Epoch 284/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step - loss: 4.9694e-04 - root_mean_squared_error: 0.0223 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1393\n",
            "Epoch 285/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 155ms/step - loss: 4.9636e-04 - root_mean_squared_error: 0.0223 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1395\n",
            "Epoch 286/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 173ms/step - loss: 4.9430e-04 - root_mean_squared_error: 0.0222 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1396\n",
            "Epoch 287/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 592ms/step - loss: 4.9178e-04 - root_mean_squared_error: 0.0222 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1394\n",
            "Epoch 288/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 341ms/step - loss: 4.8892e-04 - root_mean_squared_error: 0.0221 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1393\n",
            "Epoch 289/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 4.8770e-04 - root_mean_squared_error: 0.0221 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1395\n",
            "Epoch 290/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 4.8496e-04 - root_mean_squared_error: 0.0220 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1397\n",
            "Epoch 291/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 184ms/step - loss: 4.8458e-04 - root_mean_squared_error: 0.0220 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1399\n",
            "Epoch 292/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 4.8281e-04 - root_mean_squared_error: 0.0220 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1397\n",
            "Epoch 293/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 4.8034e-04 - root_mean_squared_error: 0.0219 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1394\n",
            "Epoch 294/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 163ms/step - loss: 4.7836e-04 - root_mean_squared_error: 0.0219 - val_loss: 0.0194 - val_root_mean_squared_error: 0.1393\n",
            "Epoch 295/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step - loss: 4.7713e-04 - root_mean_squared_error: 0.0218 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1395\n",
            "Epoch 296/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 128ms/step - loss: 4.7463e-04 - root_mean_squared_error: 0.0218 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1400\n",
            "Epoch 297/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 106ms/step - loss: 4.7420e-04 - root_mean_squared_error: 0.0218 - val_loss: 0.0197 - val_root_mean_squared_error: 0.1403\n",
            "Epoch 298/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 406ms/step - loss: 4.7329e-04 - root_mean_squared_error: 0.0218 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1402\n",
            "Epoch 299/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 147ms/step - loss: 4.7003e-04 - root_mean_squared_error: 0.0217 - val_loss: 0.0196 - val_root_mean_squared_error: 0.1399\n",
            "Epoch 300/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 213ms/step - loss: 4.6830e-04 - root_mean_squared_error: 0.0216 - val_loss: 0.0195 - val_root_mean_squared_error: 0.1398\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "<keras.src.callbacks.history.History at 0x2227bcba690>"
            ]
          },
          "execution_count": 20,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "medium_nn = Sequential()\n",
        "medium_nn.add(InputLayer((columns_count,)))\n",
        "medium_nn.add(Dense(32, 'relu'))\n",
        "medium_nn.add(Dense(16, 'relu'))\n",
        "medium_nn.add(Dense(1, 'linear'))\n",
        "\n",
        "opt = Adam(learning_rate=.1)\n",
        "cp = ModelCheckpoint('models/models/medium_nn.keras', save_best_only=True)\n",
        "medium_nn.compile(optimizer=opt, loss='mse', metrics=[RootMeanSquaredError()])\n",
        "medium_nn.fit(x=X_train, y=y_train, validation_data=(X_val, y_val), callbacks=[cp], epochs=300)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 21,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "RPwwpMMZIIrA",
        "outputId": "97378ea3-e00c-459e-9bbd-ae26f70c7cfe"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 141ms/step\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 42ms/step\n",
            "          0         1         2      3            4\n",
            "0 -1.104083  0.828325 -1.362770  1.104  [1.2008833]\n",
            "1  1.588802  0.828325 -1.362770  1.785  [1.7353554]\n",
            "2 -1.104083  1.548607 -1.362770  1.134  [1.2840205]\n",
            "3  1.588802  1.548607 -1.362770  1.719  [1.8103809]\n",
            "4 -0.565506  1.548607 -1.362770  1.233  [1.3743122]\n",
            "5 -0.026929  0.828325 -1.362770  1.328  [1.3978672]\n",
            "6 -0.565506 -1.332522 -1.362770  1.199  [1.2104847]\n",
            "7 -0.565506 -0.612240 -1.362770  1.248  [1.2090008]\n",
            "8 -0.026929  0.108042 -1.362770  1.479  [1.3428748]\n",
            "9  1.588802  0.108042  0.733799  1.905  [1.7667303]\n",
            "\n",
            "RMSE: train: 0.10270629234525352 , valid: 0.10337290285408894\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "medium_nn = load_model('models/models/medium_nn.keras')\n",
        "#prediction\n",
        "y_train_pred=medium_nn.predict(X_train)\n",
        "y_val_pred=medium_nn.predict(X_val)\n",
        "y_test_pred=medium_nn.predict(X_test)\n",
        "\n",
        "#visualisation\n",
        "visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 22,
      "metadata": {
        "id": "vWoPfZ0HI9U_"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m5s\u001b[0m 5s/step - loss: 2.2135 - root_mean_squared_error: 1.4878 - val_loss: 12887.6357 - val_root_mean_squared_error: 113.5237\n",
            "Epoch 2/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 369ms/step - loss: 10370.8848 - root_mean_squared_error: 101.8375 - val_loss: 0.6028 - val_root_mean_squared_error: 0.7764\n",
            "Epoch 3/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 107ms/step - loss: 0.8685 - root_mean_squared_error: 0.9320 - val_loss: 2.0973 - val_root_mean_squared_error: 1.4482\n",
            "Epoch 4/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 182ms/step - loss: 2.2126 - root_mean_squared_error: 1.4875 - val_loss: 1.9274 - val_root_mean_squared_error: 1.3883\n",
            "Epoch 5/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 1.9816 - root_mean_squared_error: 1.4077 - val_loss: 1.0300 - val_root_mean_squared_error: 1.0149\n",
            "Epoch 6/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 170ms/step - loss: 0.9376 - root_mean_squared_error: 0.9683 - val_loss: 0.5904 - val_root_mean_squared_error: 0.7684\n",
            "Epoch 7/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 0.9802 - root_mean_squared_error: 0.9901 - val_loss: 1.1679 - val_root_mean_squared_error: 1.0807\n",
            "Epoch 8/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 119ms/step - loss: 1.1446 - root_mean_squared_error: 1.0699 - val_loss: 1.4131 - val_root_mean_squared_error: 1.1888\n",
            "Epoch 9/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 211ms/step - loss: 2.3313 - root_mean_squared_error: 1.5269 - val_loss: 0.1113 - val_root_mean_squared_error: 0.3337\n",
            "Epoch 10/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 292ms/step - loss: 0.2088 - root_mean_squared_error: 0.4569 - val_loss: 0.2866 - val_root_mean_squared_error: 0.5353\n",
            "Epoch 11/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 169ms/step - loss: 0.5065 - root_mean_squared_error: 0.7117 - val_loss: 0.7838 - val_root_mean_squared_error: 0.8853\n",
            "Epoch 12/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 206ms/step - loss: 1.0750 - root_mean_squared_error: 1.0368 - val_loss: 0.8997 - val_root_mean_squared_error: 0.9486\n",
            "Epoch 13/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 160ms/step - loss: 1.2376 - root_mean_squared_error: 1.1125 - val_loss: 0.1773 - val_root_mean_squared_error: 0.4210\n",
            "Epoch 14/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 337ms/step - loss: 0.4476 - root_mean_squared_error: 0.6690 - val_loss: 1.6560 - val_root_mean_squared_error: 1.2869\n",
            "Epoch 15/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 452ms/step - loss: 1.5538 - root_mean_squared_error: 1.2465 - val_loss: 0.8095 - val_root_mean_squared_error: 0.8997\n",
            "Epoch 16/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 105ms/step - loss: 1.2407 - root_mean_squared_error: 1.1139 - val_loss: 1.4160 - val_root_mean_squared_error: 1.1900\n",
            "Epoch 17/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 163ms/step - loss: 1.8270 - root_mean_squared_error: 1.3517 - val_loss: 0.2344 - val_root_mean_squared_error: 0.4841\n",
            "Epoch 18/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 123ms/step - loss: 0.4116 - root_mean_squared_error: 0.6415 - val_loss: 0.9429 - val_root_mean_squared_error: 0.9710\n",
            "Epoch 19/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.9598 - root_mean_squared_error: 0.9797 - val_loss: 0.1963 - val_root_mean_squared_error: 0.4431\n",
            "Epoch 20/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step - loss: 0.3627 - root_mean_squared_error: 0.6022 - val_loss: 0.5558 - val_root_mean_squared_error: 0.7455\n",
            "Epoch 21/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 191ms/step - loss: 0.7938 - root_mean_squared_error: 0.8910 - val_loss: 0.3149 - val_root_mean_squared_error: 0.5612\n",
            "Epoch 22/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 198ms/step - loss: 0.5447 - root_mean_squared_error: 0.7380 - val_loss: 0.4999 - val_root_mean_squared_error: 0.7070\n",
            "Epoch 23/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step - loss: 0.4671 - root_mean_squared_error: 0.6835 - val_loss: 0.7879 - val_root_mean_squared_error: 0.8877\n",
            "Epoch 24/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 175ms/step - loss: 0.6012 - root_mean_squared_error: 0.7754 - val_loss: 0.2415 - val_root_mean_squared_error: 0.4915\n",
            "Epoch 25/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 379ms/step - loss: 0.3149 - root_mean_squared_error: 0.5611 - val_loss: 0.4543 - val_root_mean_squared_error: 0.6740\n",
            "Epoch 26/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.5845 - root_mean_squared_error: 0.7645 - val_loss: 0.2833 - val_root_mean_squared_error: 0.5323\n",
            "Epoch 27/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - loss: 0.2655 - root_mean_squared_error: 0.5153 - val_loss: 0.7450 - val_root_mean_squared_error: 0.8632\n",
            "Epoch 28/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.3850 - root_mean_squared_error: 0.6205 - val_loss: 0.6872 - val_root_mean_squared_error: 0.8290\n",
            "Epoch 29/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 178ms/step - loss: 0.3139 - root_mean_squared_error: 0.5602 - val_loss: 0.2938 - val_root_mean_squared_error: 0.5420\n",
            "Epoch 30/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.2504 - root_mean_squared_error: 0.5004 - val_loss: 0.2764 - val_root_mean_squared_error: 0.5257\n",
            "Epoch 31/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 102ms/step - loss: 0.3365 - root_mean_squared_error: 0.5801 - val_loss: 0.3331 - val_root_mean_squared_error: 0.5772\n",
            "Epoch 32/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.1852 - root_mean_squared_error: 0.4303 - val_loss: 0.7197 - val_root_mean_squared_error: 0.8484\n",
            "Epoch 33/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 199ms/step - loss: 0.2480 - root_mean_squared_error: 0.4980 - val_loss: 0.6449 - val_root_mean_squared_error: 0.8031\n",
            "Epoch 34/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 0.2072 - root_mean_squared_error: 0.4552 - val_loss: 0.2972 - val_root_mean_squared_error: 0.5451\n",
            "Epoch 35/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step - loss: 0.1384 - root_mean_squared_error: 0.3720 - val_loss: 0.2235 - val_root_mean_squared_error: 0.4728\n",
            "Epoch 36/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 0.1938 - root_mean_squared_error: 0.4402 - val_loss: 0.2448 - val_root_mean_squared_error: 0.4947\n",
            "Epoch 37/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 188ms/step - loss: 0.1164 - root_mean_squared_error: 0.3412 - val_loss: 0.4005 - val_root_mean_squared_error: 0.6329\n",
            "Epoch 38/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 305ms/step - loss: 0.1165 - root_mean_squared_error: 0.3413 - val_loss: 0.4328 - val_root_mean_squared_error: 0.6579\n",
            "Epoch 39/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 147ms/step - loss: 0.1298 - root_mean_squared_error: 0.3602 - val_loss: 0.2542 - val_root_mean_squared_error: 0.5042\n",
            "Epoch 40/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 203ms/step - loss: 0.0654 - root_mean_squared_error: 0.2557 - val_loss: 0.1642 - val_root_mean_squared_error: 0.4052\n",
            "Epoch 41/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0893 - root_mean_squared_error: 0.2988 - val_loss: 0.1526 - val_root_mean_squared_error: 0.3907\n",
            "Epoch 42/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 434ms/step - loss: 0.0707 - root_mean_squared_error: 0.2659 - val_loss: 0.2080 - val_root_mean_squared_error: 0.4561\n",
            "Epoch 43/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0402 - root_mean_squared_error: 0.2005 - val_loss: 0.2662 - val_root_mean_squared_error: 0.5159\n",
            "Epoch 44/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step - loss: 0.0664 - root_mean_squared_error: 0.2576 - val_loss: 0.1943 - val_root_mean_squared_error: 0.4408\n",
            "Epoch 45/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 181ms/step - loss: 0.0353 - root_mean_squared_error: 0.1879 - val_loss: 0.1150 - val_root_mean_squared_error: 0.3392\n",
            "Epoch 46/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 160ms/step - loss: 0.0324 - root_mean_squared_error: 0.1800 - val_loss: 0.0955 - val_root_mean_squared_error: 0.3091\n",
            "Epoch 47/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 120ms/step - loss: 0.0411 - root_mean_squared_error: 0.2028 - val_loss: 0.1051 - val_root_mean_squared_error: 0.3242\n",
            "Epoch 48/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 182ms/step - loss: 0.0169 - root_mean_squared_error: 0.1299 - val_loss: 0.1287 - val_root_mean_squared_error: 0.3587\n",
            "Epoch 49/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 0.0296 - root_mean_squared_error: 0.1722 - val_loss: 0.1150 - val_root_mean_squared_error: 0.3391\n",
            "Epoch 50/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 222ms/step - loss: 0.0269 - root_mean_squared_error: 0.1639 - val_loss: 0.0794 - val_root_mean_squared_error: 0.2818\n",
            "Epoch 51/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0132 - root_mean_squared_error: 0.1148 - val_loss: 0.0652 - val_root_mean_squared_error: 0.2554\n",
            "Epoch 52/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 283ms/step - loss: 0.0264 - root_mean_squared_error: 0.1624 - val_loss: 0.0667 - val_root_mean_squared_error: 0.2582\n",
            "Epoch 53/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 196ms/step - loss: 0.0177 - root_mean_squared_error: 0.1332 - val_loss: 0.0834 - val_root_mean_squared_error: 0.2887\n",
            "Epoch 54/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 156ms/step - loss: 0.0148 - root_mean_squared_error: 0.1216 - val_loss: 0.0913 - val_root_mean_squared_error: 0.3022\n",
            "Epoch 55/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0236 - root_mean_squared_error: 0.1535 - val_loss: 0.0712 - val_root_mean_squared_error: 0.2668\n",
            "Epoch 56/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0134 - root_mean_squared_error: 0.1156 - val_loss: 0.0516 - val_root_mean_squared_error: 0.2271\n",
            "Epoch 57/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step - loss: 0.0164 - root_mean_squared_error: 0.1282 - val_loss: 0.0450 - val_root_mean_squared_error: 0.2121\n",
            "Epoch 58/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0174 - root_mean_squared_error: 0.1321 - val_loss: 0.0455 - val_root_mean_squared_error: 0.2134\n",
            "Epoch 59/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step - loss: 0.0097 - root_mean_squared_error: 0.0984 - val_loss: 0.0470 - val_root_mean_squared_error: 0.2169\n",
            "Epoch 60/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 264ms/step - loss: 0.0141 - root_mean_squared_error: 0.1188 - val_loss: 0.0399 - val_root_mean_squared_error: 0.1997\n",
            "Epoch 61/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 281ms/step - loss: 0.0120 - root_mean_squared_error: 0.1095 - val_loss: 0.0304 - val_root_mean_squared_error: 0.1744\n",
            "Epoch 62/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0083 - root_mean_squared_error: 0.0912 - val_loss: 0.0262 - val_root_mean_squared_error: 0.1618\n",
            "Epoch 63/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 190ms/step - loss: 0.0121 - root_mean_squared_error: 0.1101 - val_loss: 0.0252 - val_root_mean_squared_error: 0.1588\n",
            "Epoch 64/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 0.0091 - root_mean_squared_error: 0.0953 - val_loss: 0.0279 - val_root_mean_squared_error: 0.1670\n",
            "Epoch 65/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 190ms/step - loss: 0.0081 - root_mean_squared_error: 0.0902 - val_loss: 0.0305 - val_root_mean_squared_error: 0.1748\n",
            "Epoch 66/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 98ms/step - loss: 0.0110 - root_mean_squared_error: 0.1047 - val_loss: 0.0272 - val_root_mean_squared_error: 0.1649\n",
            "Epoch 67/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step - loss: 0.0081 - root_mean_squared_error: 0.0902 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1520\n",
            "Epoch 68/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 0.0088 - root_mean_squared_error: 0.0937 - val_loss: 0.0222 - val_root_mean_squared_error: 0.1491\n",
            "Epoch 69/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 144ms/step - loss: 0.0097 - root_mean_squared_error: 0.0985 - val_loss: 0.0239 - val_root_mean_squared_error: 0.1545\n",
            "Epoch 70/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 137ms/step - loss: 0.0072 - root_mean_squared_error: 0.0846 - val_loss: 0.0265 - val_root_mean_squared_error: 0.1628\n",
            "Epoch 71/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 0.0084 - root_mean_squared_error: 0.0918 - val_loss: 0.0265 - val_root_mean_squared_error: 0.1626\n",
            "Epoch 72/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 221ms/step - loss: 0.0082 - root_mean_squared_error: 0.0908 - val_loss: 0.0246 - val_root_mean_squared_error: 0.1567\n",
            "Epoch 73/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 104ms/step - loss: 0.0068 - root_mean_squared_error: 0.0825 - val_loss: 0.0241 - val_root_mean_squared_error: 0.1553\n",
            "Epoch 74/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 180ms/step - loss: 0.0080 - root_mean_squared_error: 0.0892 - val_loss: 0.0258 - val_root_mean_squared_error: 0.1606\n",
            "Epoch 75/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.0069 - root_mean_squared_error: 0.0828 - val_loss: 0.0300 - val_root_mean_squared_error: 0.1732\n",
            "Epoch 76/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 0.0062 - root_mean_squared_error: 0.0789 - val_loss: 0.0340 - val_root_mean_squared_error: 0.1843\n",
            "Epoch 77/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step - loss: 0.0069 - root_mean_squared_error: 0.0832 - val_loss: 0.0342 - val_root_mean_squared_error: 0.1849\n",
            "Epoch 78/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 176ms/step - loss: 0.0058 - root_mean_squared_error: 0.0760 - val_loss: 0.0332 - val_root_mean_squared_error: 0.1822\n",
            "Epoch 79/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 0.0061 - root_mean_squared_error: 0.0780 - val_loss: 0.0345 - val_root_mean_squared_error: 0.1857\n",
            "Epoch 80/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 87ms/step - loss: 0.0060 - root_mean_squared_error: 0.0776 - val_loss: 0.0382 - val_root_mean_squared_error: 0.1955\n",
            "Epoch 81/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 367ms/step - loss: 0.0052 - root_mean_squared_error: 0.0721 - val_loss: 0.0414 - val_root_mean_squared_error: 0.2036\n",
            "Epoch 82/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 145ms/step - loss: 0.0057 - root_mean_squared_error: 0.0757 - val_loss: 0.0412 - val_root_mean_squared_error: 0.2029\n",
            "Epoch 83/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 0.0052 - root_mean_squared_error: 0.0721 - val_loss: 0.0397 - val_root_mean_squared_error: 0.1992\n",
            "Epoch 84/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0052 - root_mean_squared_error: 0.0718 - val_loss: 0.0404 - val_root_mean_squared_error: 0.2009\n",
            "Epoch 85/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step - loss: 0.0054 - root_mean_squared_error: 0.0733 - val_loss: 0.0439 - val_root_mean_squared_error: 0.2096\n",
            "Epoch 86/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step - loss: 0.0048 - root_mean_squared_error: 0.0693 - val_loss: 0.0480 - val_root_mean_squared_error: 0.2190\n",
            "Epoch 87/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 130ms/step - loss: 0.0051 - root_mean_squared_error: 0.0714 - val_loss: 0.0490 - val_root_mean_squared_error: 0.2213\n",
            "Epoch 88/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0048 - root_mean_squared_error: 0.0695 - val_loss: 0.0478 - val_root_mean_squared_error: 0.2186\n",
            "Epoch 89/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 90ms/step - loss: 0.0047 - root_mean_squared_error: 0.0689 - val_loss: 0.0478 - val_root_mean_squared_error: 0.2187\n",
            "Epoch 90/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0049 - root_mean_squared_error: 0.0699 - val_loss: 0.0500 - val_root_mean_squared_error: 0.2236\n",
            "Epoch 91/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 111ms/step - loss: 0.0045 - root_mean_squared_error: 0.0672 - val_loss: 0.0516 - val_root_mean_squared_error: 0.2272\n",
            "Epoch 92/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step - loss: 0.0047 - root_mean_squared_error: 0.0684 - val_loss: 0.0504 - val_root_mean_squared_error: 0.2246\n",
            "Epoch 93/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 84ms/step - loss: 0.0045 - root_mean_squared_error: 0.0668 - val_loss: 0.0481 - val_root_mean_squared_error: 0.2193\n",
            "Epoch 94/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.0044 - root_mean_squared_error: 0.0666 - val_loss: 0.0476 - val_root_mean_squared_error: 0.2181\n",
            "Epoch 95/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.0045 - root_mean_squared_error: 0.0668 - val_loss: 0.0491 - val_root_mean_squared_error: 0.2216\n",
            "Epoch 96/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.0042 - root_mean_squared_error: 0.0652 - val_loss: 0.0505 - val_root_mean_squared_error: 0.2248\n",
            "Epoch 97/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.0043 - root_mean_squared_error: 0.0659 - val_loss: 0.0499 - val_root_mean_squared_error: 0.2234\n",
            "Epoch 98/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 167ms/step - loss: 0.0042 - root_mean_squared_error: 0.0644 - val_loss: 0.0486 - val_root_mean_squared_error: 0.2203\n",
            "Epoch 99/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 141ms/step - loss: 0.0042 - root_mean_squared_error: 0.0646 - val_loss: 0.0485 - val_root_mean_squared_error: 0.2202\n",
            "Epoch 100/100\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step - loss: 0.0041 - root_mean_squared_error: 0.0643 - val_loss: 0.0495 - val_root_mean_squared_error: 0.2224\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "<keras.src.callbacks.history.History at 0x2227ea69850>"
            ]
          },
          "execution_count": 22,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "large_nn = Sequential()\n",
        "large_nn.add(InputLayer((columns_count,)))\n",
        "large_nn.add(Dense(256, 'relu'))\n",
        "large_nn.add(Dense(128, 'relu'))\n",
        "large_nn.add(Dense(64, 'relu'))\n",
        "large_nn.add(Dense(32, 'relu'))\n",
        "large_nn.add(Dense(1, 'linear'))\n",
        "\n",
        "opt = Adam(learning_rate=.1)\n",
        "cp = ModelCheckpoint('models/models/large_nn.keras', save_best_only=True)\n",
        "large_nn.compile(optimizer=opt, loss='mse', metrics=[RootMeanSquaredError()])\n",
        "large_nn.fit(x=X_train, y=y_train, validation_data=(X_val, y_val), callbacks=[cp], epochs=100)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 23,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "v5sa_qQVJByu",
        "outputId": "61c2aff1-ee4e-45fe-ee35-48d63a00d6c5"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "WARNING:tensorflow:5 out of the last 7 calls to <function TensorFlowTrainer.make_predict_function.<locals>.one_step_on_data_distributed at 0x000002227FD99E40> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 142ms/step\n",
            "WARNING:tensorflow:6 out of the last 8 calls to <function TensorFlowTrainer.make_predict_function.<locals>.one_step_on_data_distributed at 0x000002227FD99E40> triggered tf.function retracing. Tracing is expensive and the excessive number of tracings could be due to (1) creating @tf.function repeatedly in a loop, (2) passing tensors with different shapes, (3) passing Python objects instead of tensors. For (1), please define your @tf.function outside of the loop. For (2), @tf.function has reduce_retracing=True option that can avoid unnecessary retracing. For (3), please refer to https://www.tensorflow.org/guide/function#controlling_retracing and https://www.tensorflow.org/api_docs/python/tf/function for  more details.\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 42ms/step\n",
            "          0         1         2      3            4\n",
            "0 -1.104083  0.828325 -1.362770  1.104  [1.3248785]\n",
            "1  1.588802  0.828325 -1.362770  1.785   [1.857298]\n",
            "2 -1.104083  1.548607 -1.362770  1.134  [1.3652258]\n",
            "3  1.588802  1.548607 -1.362770  1.719   [1.802406]\n",
            "4 -0.565506  1.548607 -1.362770  1.233   [1.272781]\n",
            "5 -0.026929  0.828325 -1.362770  1.328   [1.364181]\n",
            "6 -0.565506 -1.332522 -1.362770  1.199  [1.2721404]\n",
            "7 -0.565506 -0.612240 -1.362770  1.248  [1.2721404]\n",
            "8 -0.026929  0.108042 -1.362770  1.479  [1.3142053]\n",
            "9  1.588802  0.108042  0.733799  1.905  [1.6368772]\n",
            "\n",
            "RMSE: train: 0.09846796561649562 , valid: 0.14909970800395012\n"
          ]
        },
        {
          "data": {
            "image/png": "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vqtHHnlk2G0aGhq0YcOGiS4NAAB4wIQfGenv75dlWXr88ce1bNkyXXrppbr//vv16KOPjnh0pL6+XrFYLL10d3dPdJkAAMCQCT8yEgwGNW/ePAUCgXTbOeecI9u2dfjwYX35y18eso3f75ff75/o0gAAgAdM+JGRCy+8UEeOHFFvb2+67be//a3y8vJUVFQ00U8PAAA8znEY6e3tVSQSUSQSkSR1dnYqEomoq6tLUuoUy7p169L9165dq1NPPVXXXnutXn/9dbW2tur222/XddddpxkzZozPqwAAAFnLcRhpb2/X0qVLtXTpUknS+vXrtXTpUt11112SpGg0mg4mknTyySfrueee0/vvv6/zzz9fV111lSorK/X9739/nF4CAADIZpZt27bpIr5IPB5XIBBQLBZTfn6+6XIAAEAGMv395t40AADAKMIIAAAwijACAACMIowAAACjCCMAAMAowggAADCKMAIAAIwijAAAAKMIIwAAwCjCCAAAMIowAgAAjCKMAAAAowgjAADAKMIIAAAwijACAACMIowAAACjCCMAAMAowggAADCKMAIAAIwijAAAAKMIIwAAwCjCCAAAMIowAgAAjCKMAAAAowgjAADAKMIIAAAwijACAACMIowAAACjCCMAAMAowggAADCKMAIAAIxyHEZaW1tVWVmpwsJCWZal5ubmE/ZvaWmRZVlDlqNHj462ZgAAMIk4DiN9fX0qKSlRY2Ojo+0OHDigaDSaXubMmeP0qQEAwCQ0xekGFRUVqqiocPxEc+bM0axZsxxvBwAAJjfXrhlZsmSJgsGgLrnkEu3evfuEfROJhOLx+KAFAABMThMeRoLBoLZs2aKnnnpKTz31lEKhkMrKyvTqq6+OuE1DQ4MCgUB6CYVCE10mAAAwxLJt2x71xpalnTt3avXq1Y62u+iiizR//nw99thjwz6eSCSUSCTS6/F4XKFQSLFYTPn5+aMtFwAAuCgejysQCHzh77fja0bGw7Jly7Rr164RH/f7/fL7/S5WBAAATDEyz0gkElEwGDTx1AAAwGMcHxnp7e1VR0dHer2zs1ORSEQFBQWaP3++6uvr1dPTo23btkmSNm3apIULF2rx4sX66KOP9NBDD+mFF17Qz3/+8/F7FQCyUzIptbVJ0agUDEqlpZLPZ7oqAC5zHEba29tVXl6eXl+/fr0kqaamRk1N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2wTZzZMXsCYSCSUSifR6PB43WA0AYBAP3tsE2c2TF7A2NDQoEAikl1AoZLokAMAAD97bBNnNk2Gkvr5esVgsvXR3d5suCQAwwIP3NkF282QY8fv9ys/PH7QAADzEY/c2QXbz5DUjAIAs4KF7myC7OQ4jvb296ujoSK93dnYqEomooKBA8+fPV319vXp6erRt27Z0n0gkkt72d7/7nSKRiKZNm6Y/+ZM/GfsrAACY45F7myC7WbY93Kw1I2tpaVF5efmQ9pqaGjU1Nemaa67RoUOH1NLS8umTDHOR04IFC3To0KGMnjMejysQCCgWi3HKBgCALJHp77fjMGICYQQAgOyT6e+3Jy9gBQAAuYMwAgAAjCKMAAAAowgjAADAKMIIAAAwijACAACMIowAAACjsmI6+IGpUOLxuOFKAABApgZ+t79oSrOsCCPHjx+XJIVCIcOVAAAAp44fP65AIDDi41kxA2t/f7+OHDmiU045Zdip5ZESj8cVCoXU3d3NTLUOse9Gh/02Ouy30WG/jZ6pfWfbto4fP67CwkLl5Y18ZUhWHBnJy8tTUVGR6TKyRn5+Pv+jjhL7bnTYb6PDfhsd9tvomdh3JzoiMoALWAEAgFGEEQAAYBRhZBLx+/26++675ff7TZeSddh3o8N+Gx322+iw30bP6/suKy5gBQAAkxdHRgAAgFGEEQAAYBRhBAAAGEUYAQAARhFGstw//dM/6YILLtDMmTM1a9asjLaxbVt33XWXgsGgZsyYoZUrV+rNN9+c2EI95ve//72uuuoq5efna9asWbr++uvV29t7wm3KyspkWdag5eabb3apYnMaGxtVXFys6dOna/ny5XrllVdO2P/JJ5/U2WefrenTp+u8887T008/7VKl3uJkvzU1NQ35bE2fPt3Far2htbVVlZWVKiwslGVZam5u/sJtWlpa9NWvflV+v19nnnmmmpqaJrxOr3G631paWoZ83izL0tGjR90peBiEkSz38ccf65vf/Kb+6q/+KuNt7r33Xn3/+9/Xli1btGfPHp100klatWqVPvroowms1Fuuuuoq7d+/X88995z+67/+S62trbrxxhu/cLtvfetbikaj6eXee+91oVpz/v3f/13r16/X3XffrVdffVUlJSVatWqV/u///m/Y/i+99JKuvPJKXX/99dq3b59Wr16t1atX6ze/+Y3LlZvldL9JqZkxP/vZevvtt12s2Bv6+vpUUlKixsbGjPp3dnbqsssuU3l5uSKRiOrq6nTDDTfo2WefneBKvcXpfhtw4MCBQZ+5OXPmTFCFGbAxKTzyyCN2IBD4wn79/f323Llz7X/5l39Jt73//vu23++3t2/fPoEVesfrr79uS7J/9atfpdt+9rOf2ZZl2T09PSNud9FFF9m1tbUuVOgdy5Yts2+55Zb0ejKZtAsLC+2GhoZh+19++eX2ZZddNqht+fLl9k033TShdXqN0/2W6f+/uUSSvXPnzhP2+Zu/+Rt78eLFg9quuOIKe9WqVRNYmbdlst9efPFFW5L93nvvuVJTJjgykmM6Ozt19OhRrVy5Mt0WCAS0fPlyvfzyywYrc8/LL7+sWbNm6fzzz0+3rVy5Unl5edqzZ88Jt3388cf1pS99Seeee67q6+v1wQcfTHS5xnz88cfau3fvoM9KXl6eVq5cOeJn5eWXXx7UX5JWrVqVM58taXT7TZJ6e3u1YMEChUIhVVVVaf/+/W6Um9X4vI3NkiVLFAwGdckll2j37t1Ga8mKG+Vh/AycEzzttNMGtZ922mlGzxe66ejRo0MOR06ZMkUFBQUn3Adr167VggULVFhYqF//+tf627/9Wx04cEDhcHiiSzbinXfeUTKZHPaz8r//+7/DbnP06NGc/mxJo9tvixYt0tatW/WVr3xFsVhM9913ny644ALt37+fm4SewEift3g8rg8//FAzZswwVJm3BYNBbdmyReeff74SiYQeeughlZWVac+ePfrqV79qpCbCiAfdcccd2rhx4wn7vPHGGzr77LNdqig7ZLrfRuuz15Scd955CgaDuvjii/XWW2/pjDPOGPXfC6xYsUIrVqxIr19wwQU655xz9K//+q/6h3/4B4OVYTJatGiRFi1alF6/4IIL9NZbb+mBBx7QY489ZqQmwogHfec739E111xzwj6nn376qP7uuXPnSpKOHTumYDCYbj927JiWLFkyqr/TKzLdb3Pnzh1yIeEnn3yi3//+9+n9k4nly5dLkjo6OiZlGPnSl74kn8+nY8eODWo/duzYiPtp7ty5jvpPRqPZb583depULV26VB0dHRNR4qQx0uctPz+foyIOLVu2TLt27TL2/IQRD5o9e7Zmz549IX/3woULNXfuXD3//PPp8BGPx7Vnzx5HI3K8KNP9tmLFCr3//vvau3evvva1r0mSXnjhBfX396cDRiYikYgkDQp1k8m0adP0ta99Tc8//7xWr14tServ79fzzz+vW2+9ddhtVqxYoeeff151dXXptueee27Qv/onu9Hst89LJpN67bXXdOmll05gpdlvxYoVQ4aO59rnbbxEIhGz32Wmr6DF2Lz99tv2vn377A0bNtgnn3yyvW/fPnvfvn328ePH030WLVpkh8Ph9Po///M/27NmzbJ/+tOf2r/+9a/tqqoqe+HChfaHH35o4iUY8Wd/9mf20qVL7T179ti7du2yv/zlL9tXXnll+vHDhw/bixYtsvfs2WPbtm13dHTYf//3f2+3t7fbnZ2d9k9/+lP79NNPt7/+9a+begmueOKJJ2y/3283NTXZr7/+un3jjTfas2bNso8ePWrbtm1fffXV9h133JHuv3v3bnvKlCn2fffdZ7/xxhv23XffbU+dOtV+7bXXTL0EI5zutw0bNtjPPvus/dZbb9l79+61//Iv/9KePn26vX//flMvwYjjx4+nv8Mk2ffff7+9b98+++2337Zt27bvuOMO++qrr073P3jwoD1z5kz79ttvt9944w27sbHR9vl89jPPPGPqJRjhdL898MADdnNzs/3mm2/ar732ml1bW2vn5eXZv/jFL0y9BJswkuVqampsSUOWF198Md1Hkv3II4+k1/v7++3vfve79mmnnWb7/X774osvtg8cOOB+8Qa9++679pVXXmmffPLJdn5+vn3ttdcOCnCdnZ2D9mNXV5f99a9/3S4oKLD9fr995pln2rfffrsdi8UMvQL3/OAHP7Dnz59vT5s2zV62bJn9P//zP+nHLrroIrumpmZQ/5/85Cf2WWedZU+bNs1evHix/d///d8uV+wNTvZbXV1duu9pp51mX3rppfarr75qoGqzBoacfn4Z2Fc1NTX2RRddNGSbJUuW2NOmTbNPP/30Qd91ucLpftu4caN9xhln2NOnT7cLCgrssrIy+4UXXjBT/B9Ztm3bLh+MAQAASGOeEQAAYBRhBAAAGEUYAQAARhFGAACAUYQRAABgFGEEAAAYRRgBAABGEUYAAIBRhBEAAGAUYQQAABhFGAEAAEYRRgAAgFH/Hyi1xqafOqBTAAAAAElFTkSuQmCC",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "large_nn = load_model('models/models/large_nn.keras')\n",
        "#prediction\n",
        "y_train_pred=large_nn.predict(X_train)\n",
        "y_val_pred=large_nn.predict(X_val)\n",
        "y_test_pred=large_nn.predict(X_test)\n",
        "\n",
        "#visualisation\n",
        "visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 24,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "k9qTUZ1YKA64",
        "outputId": "6d3891d4-edbe-40d6-dcb0-2bca9f38e73e"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "0.13701253749645487"
            ]
          },
          "execution_count": 24,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "rmse(gbr.predict(X_test), y_test)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "id": "xJLzIm4NKGsU"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Epoch 1/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m4s\u001b[0m 4s/step - loss: 2.1080 - root_mean_squared_error: 1.4519 - val_loss: 19436.7871 - val_root_mean_squared_error: 139.4159\n",
            "Epoch 2/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 288ms/step - loss: 18448.7402 - root_mean_squared_error: 135.8261 - val_loss: 0.6748 - val_root_mean_squared_error: 0.8215\n",
            "Epoch 3/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 289ms/step - loss: 0.3171 - root_mean_squared_error: 0.5631 - val_loss: 2.2388 - val_root_mean_squared_error: 1.4963\n",
            "Epoch 4/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 2.3059 - root_mean_squared_error: 1.5185 - val_loss: 2.0656 - val_root_mean_squared_error: 1.4372\n",
            "Epoch 5/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 175ms/step - loss: 2.1496 - root_mean_squared_error: 1.4662 - val_loss: 1.4402 - val_root_mean_squared_error: 1.2001\n",
            "Epoch 6/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 182ms/step - loss: 1.5218 - root_mean_squared_error: 1.2336 - val_loss: 0.5962 - val_root_mean_squared_error: 0.7721\n",
            "Epoch 7/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step - loss: 0.7674 - root_mean_squared_error: 0.8760 - val_loss: 0.8382 - val_root_mean_squared_error: 0.9156\n",
            "Epoch 8/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 191ms/step - loss: 1.0148 - root_mean_squared_error: 1.0074 - val_loss: 0.2760 - val_root_mean_squared_error: 0.5253\n",
            "Epoch 9/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 122ms/step - loss: 0.3410 - root_mean_squared_error: 0.5839 - val_loss: 0.5391 - val_root_mean_squared_error: 0.7342\n",
            "Epoch 10/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 170ms/step - loss: 0.5897 - root_mean_squared_error: 0.7679 - val_loss: 0.1424 - val_root_mean_squared_error: 0.3773\n",
            "Epoch 11/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 301ms/step - loss: 0.1703 - root_mean_squared_error: 0.4127 - val_loss: 0.4216 - val_root_mean_squared_error: 0.6493\n",
            "Epoch 12/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 0.4349 - root_mean_squared_error: 0.6594 - val_loss: 0.1705 - val_root_mean_squared_error: 0.4129\n",
            "Epoch 13/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.1626 - root_mean_squared_error: 0.4033 - val_loss: 0.1537 - val_root_mean_squared_error: 0.3921\n",
            "Epoch 14/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 190ms/step - loss: 0.1653 - root_mean_squared_error: 0.4066 - val_loss: 0.2487 - val_root_mean_squared_error: 0.4987\n",
            "Epoch 15/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 188ms/step - loss: 0.2675 - root_mean_squared_error: 0.5172 - val_loss: 0.0861 - val_root_mean_squared_error: 0.2935\n",
            "Epoch 16/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 123ms/step - loss: 0.0855 - root_mean_squared_error: 0.2924 - val_loss: 0.1558 - val_root_mean_squared_error: 0.3948\n",
            "Epoch 17/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 198ms/step - loss: 0.1193 - root_mean_squared_error: 0.3454 - val_loss: 0.2405 - val_root_mean_squared_error: 0.4904\n",
            "Epoch 18/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 409ms/step - loss: 0.1861 - root_mean_squared_error: 0.4315 - val_loss: 0.1047 - val_root_mean_squared_error: 0.3236\n",
            "Epoch 19/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 249ms/step - loss: 0.0683 - root_mean_squared_error: 0.2614 - val_loss: 0.0778 - val_root_mean_squared_error: 0.2790\n",
            "Epoch 20/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 107ms/step - loss: 0.0693 - root_mean_squared_error: 0.2632 - val_loss: 0.1160 - val_root_mean_squared_error: 0.3405\n",
            "Epoch 21/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.1204 - root_mean_squared_error: 0.3471 - val_loss: 0.0894 - val_root_mean_squared_error: 0.2990\n",
            "Epoch 22/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 201ms/step - loss: 0.0888 - root_mean_squared_error: 0.2979 - val_loss: 0.0765 - val_root_mean_squared_error: 0.2765\n",
            "Epoch 23/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 289ms/step - loss: 0.0351 - root_mean_squared_error: 0.1873 - val_loss: 0.1698 - val_root_mean_squared_error: 0.4121\n",
            "Epoch 24/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 144ms/step - loss: 0.0719 - root_mean_squared_error: 0.2682 - val_loss: 0.1039 - val_root_mean_squared_error: 0.3223\n",
            "Epoch 25/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.0386 - root_mean_squared_error: 0.1964 - val_loss: 0.0563 - val_root_mean_squared_error: 0.2373\n",
            "Epoch 26/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 144ms/step - loss: 0.0265 - root_mean_squared_error: 0.1627 - val_loss: 0.0502 - val_root_mean_squared_error: 0.2239\n",
            "Epoch 27/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step - loss: 0.0359 - root_mean_squared_error: 0.1894 - val_loss: 0.0513 - val_root_mean_squared_error: 0.2264\n",
            "Epoch 28/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 206ms/step - loss: 0.0411 - root_mean_squared_error: 0.2028 - val_loss: 0.0515 - val_root_mean_squared_error: 0.2270\n",
            "Epoch 29/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 140ms/step - loss: 0.0398 - root_mean_squared_error: 0.1995 - val_loss: 0.0541 - val_root_mean_squared_error: 0.2327\n",
            "Epoch 30/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 105ms/step - loss: 0.0347 - root_mean_squared_error: 0.1864 - val_loss: 0.0648 - val_root_mean_squared_error: 0.2546\n",
            "Epoch 31/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 182ms/step - loss: 0.0327 - root_mean_squared_error: 0.1809 - val_loss: 0.0784 - val_root_mean_squared_error: 0.2800\n",
            "Epoch 32/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 143ms/step - loss: 0.0329 - root_mean_squared_error: 0.1815 - val_loss: 0.0811 - val_root_mean_squared_error: 0.2847\n",
            "Epoch 33/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 390ms/step - loss: 0.0291 - root_mean_squared_error: 0.1707 - val_loss: 0.0696 - val_root_mean_squared_error: 0.2638\n",
            "Epoch 34/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 198ms/step - loss: 0.0211 - root_mean_squared_error: 0.1453 - val_loss: 0.0555 - val_root_mean_squared_error: 0.2356\n",
            "Epoch 35/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 198ms/step - loss: 0.0158 - root_mean_squared_error: 0.1256 - val_loss: 0.0473 - val_root_mean_squared_error: 0.2175\n",
            "Epoch 36/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 160ms/step - loss: 0.0154 - root_mean_squared_error: 0.1242 - val_loss: 0.0420 - val_root_mean_squared_error: 0.2049\n",
            "Epoch 37/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step - loss: 0.0197 - root_mean_squared_error: 0.1405 - val_loss: 0.0450 - val_root_mean_squared_error: 0.2122\n",
            "Epoch 38/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 0.0188 - root_mean_squared_error: 0.1370 - val_loss: 0.0494 - val_root_mean_squared_error: 0.2223\n",
            "Epoch 39/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 120ms/step - loss: 0.0183 - root_mean_squared_error: 0.1352 - val_loss: 0.0558 - val_root_mean_squared_error: 0.2362\n",
            "Epoch 40/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 102ms/step - loss: 0.0165 - root_mean_squared_error: 0.1284 - val_loss: 0.0461 - val_root_mean_squared_error: 0.2147\n",
            "Epoch 41/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 143ms/step - loss: 0.0341 - root_mean_squared_error: 0.1846 - val_loss: 0.1651 - val_root_mean_squared_error: 0.4063\n",
            "Epoch 42/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 137ms/step - loss: 0.0601 - root_mean_squared_error: 0.2451 - val_loss: 0.1342 - val_root_mean_squared_error: 0.3663\n",
            "Epoch 43/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0428 - root_mean_squared_error: 0.2070 - val_loss: 0.0429 - val_root_mean_squared_error: 0.2072\n",
            "Epoch 44/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 202ms/step - loss: 0.0153 - root_mean_squared_error: 0.1236 - val_loss: 0.0440 - val_root_mean_squared_error: 0.2098\n",
            "Epoch 45/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 0.0340 - root_mean_squared_error: 0.1843 - val_loss: 0.0814 - val_root_mean_squared_error: 0.2853\n",
            "Epoch 46/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 179ms/step - loss: 0.0270 - root_mean_squared_error: 0.1644 - val_loss: 0.0555 - val_root_mean_squared_error: 0.2355\n",
            "Epoch 47/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 139ms/step - loss: 0.0145 - root_mean_squared_error: 0.1202 - val_loss: 0.0369 - val_root_mean_squared_error: 0.1922\n",
            "Epoch 48/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 465ms/step - loss: 0.0211 - root_mean_squared_error: 0.1454 - val_loss: 0.0546 - val_root_mean_squared_error: 0.2336\n",
            "Epoch 49/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 91ms/step - loss: 0.0192 - root_mean_squared_error: 0.1385 - val_loss: 0.0447 - val_root_mean_squared_error: 0.2115\n",
            "Epoch 50/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 76ms/step - loss: 0.0302 - root_mean_squared_error: 0.1738 - val_loss: 0.0392 - val_root_mean_squared_error: 0.1981\n",
            "Epoch 51/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 192ms/step - loss: 0.0129 - root_mean_squared_error: 0.1138 - val_loss: 0.0749 - val_root_mean_squared_error: 0.2736\n",
            "Epoch 52/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.0245 - root_mean_squared_error: 0.1566 - val_loss: 0.0625 - val_root_mean_squared_error: 0.2500\n",
            "Epoch 53/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0174 - root_mean_squared_error: 0.1317 - val_loss: 0.0381 - val_root_mean_squared_error: 0.1951\n",
            "Epoch 54/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 191ms/step - loss: 0.0111 - root_mean_squared_error: 0.1054 - val_loss: 0.0378 - val_root_mean_squared_error: 0.1945\n",
            "Epoch 55/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 204ms/step - loss: 0.0189 - root_mean_squared_error: 0.1374 - val_loss: 0.0357 - val_root_mean_squared_error: 0.1891\n",
            "Epoch 56/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0141 - root_mean_squared_error: 0.1187 - val_loss: 0.0404 - val_root_mean_squared_error: 0.2009\n",
            "Epoch 57/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0085 - root_mean_squared_error: 0.0922 - val_loss: 0.0550 - val_root_mean_squared_error: 0.2346\n",
            "Epoch 58/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0142 - root_mean_squared_error: 0.1193 - val_loss: 0.0484 - val_root_mean_squared_error: 0.2200\n",
            "Epoch 59/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 174ms/step - loss: 0.0116 - root_mean_squared_error: 0.1077 - val_loss: 0.0357 - val_root_mean_squared_error: 0.1890\n",
            "Epoch 60/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0086 - root_mean_squared_error: 0.0930 - val_loss: 0.0341 - val_root_mean_squared_error: 0.1847\n",
            "Epoch 61/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.0123 - root_mean_squared_error: 0.1107 - val_loss: 0.0340 - val_root_mean_squared_error: 0.1845\n",
            "Epoch 62/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 388ms/step - loss: 0.0106 - root_mean_squared_error: 0.1029 - val_loss: 0.0369 - val_root_mean_squared_error: 0.1922\n",
            "Epoch 63/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0073 - root_mean_squared_error: 0.0852 - val_loss: 0.0449 - val_root_mean_squared_error: 0.2119\n",
            "Epoch 64/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 178ms/step - loss: 0.0099 - root_mean_squared_error: 0.0996 - val_loss: 0.0448 - val_root_mean_squared_error: 0.2117\n",
            "Epoch 65/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 115ms/step - loss: 0.0099 - root_mean_squared_error: 0.0995 - val_loss: 0.0383 - val_root_mean_squared_error: 0.1956\n",
            "Epoch 66/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 169ms/step - loss: 0.0073 - root_mean_squared_error: 0.0857 - val_loss: 0.0368 - val_root_mean_squared_error: 0.1917\n",
            "Epoch 67/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0092 - root_mean_squared_error: 0.0958 - val_loss: 0.0366 - val_root_mean_squared_error: 0.1913\n",
            "Epoch 68/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 113ms/step - loss: 0.0091 - root_mean_squared_error: 0.0954 - val_loss: 0.0376 - val_root_mean_squared_error: 0.1938\n",
            "Epoch 69/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 279ms/step - loss: 0.0070 - root_mean_squared_error: 0.0834 - val_loss: 0.0409 - val_root_mean_squared_error: 0.2021\n",
            "Epoch 70/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 204ms/step - loss: 0.0075 - root_mean_squared_error: 0.0868 - val_loss: 0.0417 - val_root_mean_squared_error: 0.2043\n",
            "Epoch 71/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 169ms/step - loss: 0.0082 - root_mean_squared_error: 0.0908 - val_loss: 0.0382 - val_root_mean_squared_error: 0.1954\n",
            "Epoch 72/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 164ms/step - loss: 0.0068 - root_mean_squared_error: 0.0822 - val_loss: 0.0358 - val_root_mean_squared_error: 0.1893\n",
            "Epoch 73/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step - loss: 0.0074 - root_mean_squared_error: 0.0861 - val_loss: 0.0356 - val_root_mean_squared_error: 0.1886\n",
            "Epoch 74/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 99ms/step - loss: 0.0078 - root_mean_squared_error: 0.0884 - val_loss: 0.0366 - val_root_mean_squared_error: 0.1913\n",
            "Epoch 75/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 95ms/step - loss: 0.0067 - root_mean_squared_error: 0.0816 - val_loss: 0.0395 - val_root_mean_squared_error: 0.1987\n",
            "Epoch 76/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 120ms/step - loss: 0.0066 - root_mean_squared_error: 0.0813 - val_loss: 0.0414 - val_root_mean_squared_error: 0.2035\n",
            "Epoch 77/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step - loss: 0.0070 - root_mean_squared_error: 0.0835 - val_loss: 0.0400 - val_root_mean_squared_error: 0.1999\n",
            "Epoch 78/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 109ms/step - loss: 0.0064 - root_mean_squared_error: 0.0798 - val_loss: 0.0374 - val_root_mean_squared_error: 0.1934\n",
            "Epoch 79/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 154ms/step - loss: 0.0061 - root_mean_squared_error: 0.0779 - val_loss: 0.0361 - val_root_mean_squared_error: 0.1900\n",
            "Epoch 80/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 322ms/step - loss: 0.0065 - root_mean_squared_error: 0.0806 - val_loss: 0.0361 - val_root_mean_squared_error: 0.1900\n",
            "Epoch 81/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0064 - root_mean_squared_error: 0.0799 - val_loss: 0.0373 - val_root_mean_squared_error: 0.1932\n",
            "Epoch 82/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0060 - root_mean_squared_error: 0.0774 - val_loss: 0.0391 - val_root_mean_squared_error: 0.1976\n",
            "Epoch 83/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0062 - root_mean_squared_error: 0.0787 - val_loss: 0.0392 - val_root_mean_squared_error: 0.1980\n",
            "Epoch 84/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0062 - root_mean_squared_error: 0.0790 - val_loss: 0.0375 - val_root_mean_squared_error: 0.1936\n",
            "Epoch 85/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 133ms/step - loss: 0.0059 - root_mean_squared_error: 0.0769 - val_loss: 0.0359 - val_root_mean_squared_error: 0.1894\n",
            "Epoch 86/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0060 - root_mean_squared_error: 0.0774 - val_loss: 0.0354 - val_root_mean_squared_error: 0.1880\n",
            "Epoch 87/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0061 - root_mean_squared_error: 0.0783 - val_loss: 0.0358 - val_root_mean_squared_error: 0.1893\n",
            "Epoch 88/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0059 - root_mean_squared_error: 0.0769 - val_loss: 0.0370 - val_root_mean_squared_error: 0.1924\n",
            "Epoch 89/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 179ms/step - loss: 0.0059 - root_mean_squared_error: 0.0769 - val_loss: 0.0376 - val_root_mean_squared_error: 0.1938\n",
            "Epoch 90/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0060 - root_mean_squared_error: 0.0777 - val_loss: 0.0366 - val_root_mean_squared_error: 0.1914\n",
            "Epoch 91/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0059 - root_mean_squared_error: 0.0766 - val_loss: 0.0353 - val_root_mean_squared_error: 0.1879\n",
            "Epoch 92/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step - loss: 0.0058 - root_mean_squared_error: 0.0763 - val_loss: 0.0347 - val_root_mean_squared_error: 0.1863\n",
            "Epoch 93/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0059 - root_mean_squared_error: 0.0769 - val_loss: 0.0349 - val_root_mean_squared_error: 0.1867\n",
            "Epoch 94/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 135ms/step - loss: 0.0058 - root_mean_squared_error: 0.0762 - val_loss: 0.0356 - val_root_mean_squared_error: 0.1887\n",
            "Epoch 95/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 154ms/step - loss: 0.0057 - root_mean_squared_error: 0.0758 - val_loss: 0.0361 - val_root_mean_squared_error: 0.1900\n",
            "Epoch 96/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 127ms/step - loss: 0.0058 - root_mean_squared_error: 0.0763 - val_loss: 0.0356 - val_root_mean_squared_error: 0.1888\n",
            "Epoch 97/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step - loss: 0.0057 - root_mean_squared_error: 0.0758 - val_loss: 0.0347 - val_root_mean_squared_error: 0.1864\n",
            "Epoch 98/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 439ms/step - loss: 0.0057 - root_mean_squared_error: 0.0753 - val_loss: 0.0342 - val_root_mean_squared_error: 0.1849\n",
            "Epoch 99/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0057 - root_mean_squared_error: 0.0756 - val_loss: 0.0343 - val_root_mean_squared_error: 0.1851\n",
            "Epoch 100/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 155ms/step - loss: 0.0057 - root_mean_squared_error: 0.0752 - val_loss: 0.0347 - val_root_mean_squared_error: 0.1863\n",
            "Epoch 101/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 126ms/step - loss: 0.0056 - root_mean_squared_error: 0.0748 - val_loss: 0.0350 - val_root_mean_squared_error: 0.1871\n",
            "Epoch 102/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 195ms/step - loss: 0.0056 - root_mean_squared_error: 0.0750 - val_loss: 0.0346 - val_root_mean_squared_error: 0.1860\n",
            "Epoch 103/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 190ms/step - loss: 0.0056 - root_mean_squared_error: 0.0746 - val_loss: 0.0338 - val_root_mean_squared_error: 0.1839\n",
            "Epoch 104/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0055 - root_mean_squared_error: 0.0742 - val_loss: 0.0333 - val_root_mean_squared_error: 0.1824\n",
            "Epoch 105/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 190ms/step - loss: 0.0055 - root_mean_squared_error: 0.0743 - val_loss: 0.0331 - val_root_mean_squared_error: 0.1819\n",
            "Epoch 106/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 289ms/step - loss: 0.0055 - root_mean_squared_error: 0.0739 - val_loss: 0.0332 - val_root_mean_squared_error: 0.1821\n",
            "Epoch 107/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 178ms/step - loss: 0.0054 - root_mean_squared_error: 0.0735 - val_loss: 0.0331 - val_root_mean_squared_error: 0.1821\n",
            "Epoch 108/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 193ms/step - loss: 0.0054 - root_mean_squared_error: 0.0735 - val_loss: 0.0328 - val_root_mean_squared_error: 0.1810\n",
            "Epoch 109/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0053 - root_mean_squared_error: 0.0731 - val_loss: 0.0322 - val_root_mean_squared_error: 0.1795\n",
            "Epoch 110/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 311ms/step - loss: 0.0053 - root_mean_squared_error: 0.0727 - val_loss: 0.0318 - val_root_mean_squared_error: 0.1785\n",
            "Epoch 111/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 178ms/step - loss: 0.0053 - root_mean_squared_error: 0.0726 - val_loss: 0.0318 - val_root_mean_squared_error: 0.1783\n",
            "Epoch 112/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 514ms/step - loss: 0.0053 - root_mean_squared_error: 0.0725 - val_loss: 0.0319 - val_root_mean_squared_error: 0.1786\n",
            "Epoch 113/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 110ms/step - loss: 0.0052 - root_mean_squared_error: 0.0725 - val_loss: 0.0320 - val_root_mean_squared_error: 0.1788\n",
            "Epoch 114/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - loss: 0.0053 - root_mean_squared_error: 0.0725 - val_loss: 0.0318 - val_root_mean_squared_error: 0.1783\n",
            "Epoch 115/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 258ms/step - loss: 0.0052 - root_mean_squared_error: 0.0723 - val_loss: 0.0315 - val_root_mean_squared_error: 0.1775\n",
            "Epoch 116/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 181ms/step - loss: 0.0052 - root_mean_squared_error: 0.0721 - val_loss: 0.0313 - val_root_mean_squared_error: 0.1771\n",
            "Epoch 117/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 253ms/step - loss: 0.0052 - root_mean_squared_error: 0.0720 - val_loss: 0.0314 - val_root_mean_squared_error: 0.1772\n",
            "Epoch 118/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 143ms/step - loss: 0.0052 - root_mean_squared_error: 0.0718 - val_loss: 0.0315 - val_root_mean_squared_error: 0.1776\n",
            "Epoch 119/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 145ms/step - loss: 0.0051 - root_mean_squared_error: 0.0715 - val_loss: 0.0316 - val_root_mean_squared_error: 0.1779\n",
            "Epoch 120/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 148ms/step - loss: 0.0051 - root_mean_squared_error: 0.0713 - val_loss: 0.0315 - val_root_mean_squared_error: 0.1776\n",
            "Epoch 121/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 218ms/step - loss: 0.0050 - root_mean_squared_error: 0.0710 - val_loss: 0.0313 - val_root_mean_squared_error: 0.1770\n",
            "Epoch 122/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 289ms/step - loss: 0.0050 - root_mean_squared_error: 0.0710 - val_loss: 0.0312 - val_root_mean_squared_error: 0.1767\n",
            "Epoch 123/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 164ms/step - loss: 0.0050 - root_mean_squared_error: 0.0709 - val_loss: 0.0312 - val_root_mean_squared_error: 0.1767\n",
            "Epoch 124/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 140ms/step - loss: 0.0050 - root_mean_squared_error: 0.0707 - val_loss: 0.0312 - val_root_mean_squared_error: 0.1766\n",
            "Epoch 125/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 208ms/step - loss: 0.0050 - root_mean_squared_error: 0.0705 - val_loss: 0.0310 - val_root_mean_squared_error: 0.1761\n",
            "Epoch 126/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 320ms/step - loss: 0.0049 - root_mean_squared_error: 0.0703 - val_loss: 0.0307 - val_root_mean_squared_error: 0.1752\n",
            "Epoch 127/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 146ms/step - loss: 0.0049 - root_mean_squared_error: 0.0702 - val_loss: 0.0305 - val_root_mean_squared_error: 0.1745\n",
            "Epoch 128/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 154ms/step - loss: 0.0049 - root_mean_squared_error: 0.0701 - val_loss: 0.0304 - val_root_mean_squared_error: 0.1745\n",
            "Epoch 129/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 137ms/step - loss: 0.0049 - root_mean_squared_error: 0.0699 - val_loss: 0.0306 - val_root_mean_squared_error: 0.1749\n",
            "Epoch 130/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 113ms/step - loss: 0.0049 - root_mean_squared_error: 0.0698 - val_loss: 0.0306 - val_root_mean_squared_error: 0.1750\n",
            "Epoch 131/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 231ms/step - loss: 0.0049 - root_mean_squared_error: 0.0697 - val_loss: 0.0304 - val_root_mean_squared_error: 0.1745\n",
            "Epoch 132/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step - loss: 0.0048 - root_mean_squared_error: 0.0695 - val_loss: 0.0301 - val_root_mean_squared_error: 0.1735\n",
            "Epoch 133/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 239ms/step - loss: 0.0048 - root_mean_squared_error: 0.0693 - val_loss: 0.0299 - val_root_mean_squared_error: 0.1729\n",
            "Epoch 134/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 254ms/step - loss: 0.0048 - root_mean_squared_error: 0.0693 - val_loss: 0.0300 - val_root_mean_squared_error: 0.1733\n",
            "Epoch 135/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0048 - root_mean_squared_error: 0.0690 - val_loss: 0.0302 - val_root_mean_squared_error: 0.1738\n",
            "Epoch 136/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 306ms/step - loss: 0.0048 - root_mean_squared_error: 0.0690 - val_loss: 0.0301 - val_root_mean_squared_error: 0.1734\n",
            "Epoch 137/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 249ms/step - loss: 0.0047 - root_mean_squared_error: 0.0688 - val_loss: 0.0297 - val_root_mean_squared_error: 0.1722\n",
            "Epoch 138/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 457ms/step - loss: 0.0047 - root_mean_squared_error: 0.0686 - val_loss: 0.0294 - val_root_mean_squared_error: 0.1714\n",
            "Epoch 139/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 141ms/step - loss: 0.0047 - root_mean_squared_error: 0.0686 - val_loss: 0.0293 - val_root_mean_squared_error: 0.1713\n",
            "Epoch 140/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0047 - root_mean_squared_error: 0.0683 - val_loss: 0.0292 - val_root_mean_squared_error: 0.1710\n",
            "Epoch 141/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 325ms/step - loss: 0.0046 - root_mean_squared_error: 0.0682 - val_loss: 0.0289 - val_root_mean_squared_error: 0.1700\n",
            "Epoch 142/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 311ms/step - loss: 0.0046 - root_mean_squared_error: 0.0679 - val_loss: 0.0284 - val_root_mean_squared_error: 0.1687\n",
            "Epoch 143/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 222ms/step - loss: 0.0046 - root_mean_squared_error: 0.0676 - val_loss: 0.0280 - val_root_mean_squared_error: 0.1675\n",
            "Epoch 144/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 361ms/step - loss: 0.0045 - root_mean_squared_error: 0.0674 - val_loss: 0.0276 - val_root_mean_squared_error: 0.1663\n",
            "Epoch 145/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 118ms/step - loss: 0.0045 - root_mean_squared_error: 0.0671 - val_loss: 0.0273 - val_root_mean_squared_error: 0.1653\n",
            "Epoch 146/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 256ms/step - loss: 0.0045 - root_mean_squared_error: 0.0669 - val_loss: 0.0270 - val_root_mean_squared_error: 0.1642\n",
            "Epoch 147/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 274ms/step - loss: 0.0044 - root_mean_squared_error: 0.0667 - val_loss: 0.0266 - val_root_mean_squared_error: 0.1632\n",
            "Epoch 148/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 626ms/step - loss: 0.0044 - root_mean_squared_error: 0.0665 - val_loss: 0.0263 - val_root_mean_squared_error: 0.1623\n",
            "Epoch 149/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 144ms/step - loss: 0.0044 - root_mean_squared_error: 0.0663 - val_loss: 0.0260 - val_root_mean_squared_error: 0.1612\n",
            "Epoch 150/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 152ms/step - loss: 0.0044 - root_mean_squared_error: 0.0660 - val_loss: 0.0256 - val_root_mean_squared_error: 0.1601\n",
            "Epoch 151/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 317ms/step - loss: 0.0043 - root_mean_squared_error: 0.0658 - val_loss: 0.0253 - val_root_mean_squared_error: 0.1590\n",
            "Epoch 152/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 225ms/step - loss: 0.0043 - root_mean_squared_error: 0.0656 - val_loss: 0.0251 - val_root_mean_squared_error: 0.1584\n",
            "Epoch 153/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 389ms/step - loss: 0.0043 - root_mean_squared_error: 0.0654 - val_loss: 0.0251 - val_root_mean_squared_error: 0.1584\n",
            "Epoch 154/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 208ms/step - loss: 0.0042 - root_mean_squared_error: 0.0652 - val_loss: 0.0252 - val_root_mean_squared_error: 0.1586\n",
            "Epoch 155/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 312ms/step - loss: 0.0042 - root_mean_squared_error: 0.0650 - val_loss: 0.0251 - val_root_mean_squared_error: 0.1583\n",
            "Epoch 156/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 311ms/step - loss: 0.0042 - root_mean_squared_error: 0.0649 - val_loss: 0.0248 - val_root_mean_squared_error: 0.1575\n",
            "Epoch 157/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 281ms/step - loss: 0.0042 - root_mean_squared_error: 0.0649 - val_loss: 0.0247 - val_root_mean_squared_error: 0.1572\n",
            "Epoch 158/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 500ms/step - loss: 0.0042 - root_mean_squared_error: 0.0649 - val_loss: 0.0249 - val_root_mean_squared_error: 0.1577\n",
            "Epoch 159/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 219ms/step - loss: 0.0042 - root_mean_squared_error: 0.0647 - val_loss: 0.0250 - val_root_mean_squared_error: 0.1580\n",
            "Epoch 160/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 143ms/step - loss: 0.0042 - root_mean_squared_error: 0.0648 - val_loss: 0.0248 - val_root_mean_squared_error: 0.1575\n",
            "Epoch 161/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 234ms/step - loss: 0.0041 - root_mean_squared_error: 0.0643 - val_loss: 0.0247 - val_root_mean_squared_error: 0.1571\n",
            "Epoch 162/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 291ms/step - loss: 0.0041 - root_mean_squared_error: 0.0642 - val_loss: 0.0247 - val_root_mean_squared_error: 0.1573\n",
            "Epoch 163/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 105ms/step - loss: 0.0041 - root_mean_squared_error: 0.0641 - val_loss: 0.0248 - val_root_mean_squared_error: 0.1576\n",
            "Epoch 164/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 185ms/step - loss: 0.0041 - root_mean_squared_error: 0.0639 - val_loss: 0.0248 - val_root_mean_squared_error: 0.1573\n",
            "Epoch 165/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 121ms/step - loss: 0.0041 - root_mean_squared_error: 0.0639 - val_loss: 0.0248 - val_root_mean_squared_error: 0.1575\n",
            "Epoch 166/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 123ms/step - loss: 0.0041 - root_mean_squared_error: 0.0638 - val_loss: 0.0249 - val_root_mean_squared_error: 0.1578\n",
            "Epoch 167/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0040 - root_mean_squared_error: 0.0636 - val_loss: 0.0248 - val_root_mean_squared_error: 0.1576\n",
            "Epoch 168/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 225ms/step - loss: 0.0040 - root_mean_squared_error: 0.0635 - val_loss: 0.0246 - val_root_mean_squared_error: 0.1569\n",
            "Epoch 169/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 420ms/step - loss: 0.0040 - root_mean_squared_error: 0.0633 - val_loss: 0.0243 - val_root_mean_squared_error: 0.1560\n",
            "Epoch 170/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step - loss: 0.0040 - root_mean_squared_error: 0.0634 - val_loss: 0.0246 - val_root_mean_squared_error: 0.1567\n",
            "Epoch 171/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 73ms/step - loss: 0.0040 - root_mean_squared_error: 0.0631 - val_loss: 0.0250 - val_root_mean_squared_error: 0.1580\n",
            "Epoch 172/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 120ms/step - loss: 0.0040 - root_mean_squared_error: 0.0632 - val_loss: 0.0248 - val_root_mean_squared_error: 0.1576\n",
            "Epoch 173/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 114ms/step - loss: 0.0040 - root_mean_squared_error: 0.0630 - val_loss: 0.0245 - val_root_mean_squared_error: 0.1564\n",
            "Epoch 174/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.0039 - root_mean_squared_error: 0.0628 - val_loss: 0.0245 - val_root_mean_squared_error: 0.1565\n",
            "Epoch 175/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 124ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0248 - val_root_mean_squared_error: 0.1575\n",
            "Epoch 176/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 336ms/step - loss: 0.0039 - root_mean_squared_error: 0.0628 - val_loss: 0.0247 - val_root_mean_squared_error: 0.1572\n",
            "Epoch 177/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.0039 - root_mean_squared_error: 0.0625 - val_loss: 0.0244 - val_root_mean_squared_error: 0.1562\n",
            "Epoch 178/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 199ms/step - loss: 0.0039 - root_mean_squared_error: 0.0627 - val_loss: 0.0247 - val_root_mean_squared_error: 0.1573\n",
            "Epoch 179/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 170ms/step - loss: 0.0039 - root_mean_squared_error: 0.0624 - val_loss: 0.0252 - val_root_mean_squared_error: 0.1588\n",
            "Epoch 180/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 166ms/step - loss: 0.0039 - root_mean_squared_error: 0.0626 - val_loss: 0.0249 - val_root_mean_squared_error: 0.1578\n",
            "Epoch 181/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 402ms/step - loss: 0.0039 - root_mean_squared_error: 0.0622 - val_loss: 0.0243 - val_root_mean_squared_error: 0.1559\n",
            "Epoch 182/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 311ms/step - loss: 0.0039 - root_mean_squared_error: 0.0621 - val_loss: 0.0243 - val_root_mean_squared_error: 0.1559\n",
            "Epoch 183/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 255ms/step - loss: 0.0039 - root_mean_squared_error: 0.0623 - val_loss: 0.0244 - val_root_mean_squared_error: 0.1563\n",
            "Epoch 184/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step - loss: 0.0039 - root_mean_squared_error: 0.0621 - val_loss: 0.0244 - val_root_mean_squared_error: 0.1563\n",
            "Epoch 185/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 162ms/step - loss: 0.0038 - root_mean_squared_error: 0.0618 - val_loss: 0.0246 - val_root_mean_squared_error: 0.1568\n",
            "Epoch 186/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 0.0038 - root_mean_squared_error: 0.0619 - val_loss: 0.0246 - val_root_mean_squared_error: 0.1567\n",
            "Epoch 187/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 180ms/step - loss: 0.0038 - root_mean_squared_error: 0.0618 - val_loss: 0.0243 - val_root_mean_squared_error: 0.1559\n",
            "Epoch 188/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 160ms/step - loss: 0.0038 - root_mean_squared_error: 0.0615 - val_loss: 0.0241 - val_root_mean_squared_error: 0.1552\n",
            "Epoch 189/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0038 - root_mean_squared_error: 0.0615 - val_loss: 0.0238 - val_root_mean_squared_error: 0.1542\n",
            "Epoch 190/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step - loss: 0.0038 - root_mean_squared_error: 0.0615 - val_loss: 0.0241 - val_root_mean_squared_error: 0.1554\n",
            "Epoch 191/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 126ms/step - loss: 0.0038 - root_mean_squared_error: 0.0613 - val_loss: 0.0240 - val_root_mean_squared_error: 0.1550\n",
            "Epoch 192/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 416ms/step - loss: 0.0037 - root_mean_squared_error: 0.0612 - val_loss: 0.0240 - val_root_mean_squared_error: 0.1550\n",
            "Epoch 193/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 225ms/step - loss: 0.0038 - root_mean_squared_error: 0.0613 - val_loss: 0.0242 - val_root_mean_squared_error: 0.1555\n",
            "Epoch 194/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step - loss: 0.0038 - root_mean_squared_error: 0.0613 - val_loss: 0.0241 - val_root_mean_squared_error: 0.1552\n",
            "Epoch 195/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0037 - root_mean_squared_error: 0.0611 - val_loss: 0.0237 - val_root_mean_squared_error: 0.1541\n",
            "Epoch 196/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 405ms/step - loss: 0.0037 - root_mean_squared_error: 0.0609 - val_loss: 0.0236 - val_root_mean_squared_error: 0.1536\n",
            "Epoch 197/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 231ms/step - loss: 0.0037 - root_mean_squared_error: 0.0608 - val_loss: 0.0236 - val_root_mean_squared_error: 0.1537\n",
            "Epoch 198/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 240ms/step - loss: 0.0037 - root_mean_squared_error: 0.0611 - val_loss: 0.0233 - val_root_mean_squared_error: 0.1526\n",
            "Epoch 199/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 161ms/step - loss: 0.0037 - root_mean_squared_error: 0.0608 - val_loss: 0.0236 - val_root_mean_squared_error: 0.1536\n",
            "Epoch 200/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 113ms/step - loss: 0.0037 - root_mean_squared_error: 0.0606 - val_loss: 0.0239 - val_root_mean_squared_error: 0.1545\n",
            "Epoch 201/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 448ms/step - loss: 0.0037 - root_mean_squared_error: 0.0607 - val_loss: 0.0232 - val_root_mean_squared_error: 0.1523\n",
            "Epoch 202/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 132ms/step - loss: 0.0037 - root_mean_squared_error: 0.0610 - val_loss: 0.0234 - val_root_mean_squared_error: 0.1531\n",
            "Epoch 203/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 176ms/step - loss: 0.0037 - root_mean_squared_error: 0.0606 - val_loss: 0.0240 - val_root_mean_squared_error: 0.1548\n",
            "Epoch 204/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 402ms/step - loss: 0.0037 - root_mean_squared_error: 0.0608 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1520\n",
            "Epoch 205/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 200ms/step - loss: 0.0037 - root_mean_squared_error: 0.0606 - val_loss: 0.0230 - val_root_mean_squared_error: 0.1518\n",
            "Epoch 206/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 158ms/step - loss: 0.0037 - root_mean_squared_error: 0.0604 - val_loss: 0.0237 - val_root_mean_squared_error: 0.1540\n",
            "Epoch 207/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0037 - root_mean_squared_error: 0.0606 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1521\n",
            "Epoch 208/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 225ms/step - loss: 0.0036 - root_mean_squared_error: 0.0602 - val_loss: 0.0230 - val_root_mean_squared_error: 0.1516\n",
            "Epoch 209/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 85ms/step - loss: 0.0036 - root_mean_squared_error: 0.0603 - val_loss: 0.0235 - val_root_mean_squared_error: 0.1533\n",
            "Epoch 210/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 362ms/step - loss: 0.0036 - root_mean_squared_error: 0.0602 - val_loss: 0.0233 - val_root_mean_squared_error: 0.1526\n",
            "Epoch 211/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 351ms/step - loss: 0.0036 - root_mean_squared_error: 0.0600 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1497\n",
            "Epoch 212/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 130ms/step - loss: 0.0037 - root_mean_squared_error: 0.0609 - val_loss: 0.0232 - val_root_mean_squared_error: 0.1523\n",
            "Epoch 213/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 0.0036 - root_mean_squared_error: 0.0599 - val_loss: 0.0237 - val_root_mean_squared_error: 0.1539\n",
            "Epoch 214/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 258ms/step - loss: 0.0037 - root_mean_squared_error: 0.0607 - val_loss: 0.0223 - val_root_mean_squared_error: 0.1494\n",
            "Epoch 215/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 262ms/step - loss: 0.0037 - root_mean_squared_error: 0.0607 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1507\n",
            "Epoch 216/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 170ms/step - loss: 0.0036 - root_mean_squared_error: 0.0598 - val_loss: 0.0238 - val_root_mean_squared_error: 0.1543\n",
            "Epoch 217/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 194ms/step - loss: 0.0037 - root_mean_squared_error: 0.0608 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1496\n",
            "Epoch 218/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 375ms/step - loss: 0.0036 - root_mean_squared_error: 0.0601 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1497\n",
            "Epoch 219/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 164ms/step - loss: 0.0036 - root_mean_squared_error: 0.0600 - val_loss: 0.0235 - val_root_mean_squared_error: 0.1534\n",
            "Epoch 220/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 112ms/step - loss: 0.0036 - root_mean_squared_error: 0.0604 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1506\n",
            "Epoch 221/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 194ms/step - loss: 0.0035 - root_mean_squared_error: 0.0595 - val_loss: 0.0220 - val_root_mean_squared_error: 0.1482\n",
            "Epoch 222/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 96ms/step - loss: 0.0036 - root_mean_squared_error: 0.0601 - val_loss: 0.0229 - val_root_mean_squared_error: 0.1512\n",
            "Epoch 223/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 187ms/step - loss: 0.0036 - root_mean_squared_error: 0.0596 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1497\n",
            "Epoch 224/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 0.0035 - root_mean_squared_error: 0.0594 - val_loss: 0.0222 - val_root_mean_squared_error: 0.1490\n",
            "Epoch 225/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0035 - root_mean_squared_error: 0.0595 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1507\n",
            "Epoch 226/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 129ms/step - loss: 0.0035 - root_mean_squared_error: 0.0594 - val_loss: 0.0225 - val_root_mean_squared_error: 0.1500\n",
            "Epoch 227/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0035 - root_mean_squared_error: 0.0593 - val_loss: 0.0221 - val_root_mean_squared_error: 0.1486\n",
            "Epoch 228/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 342ms/step - loss: 0.0035 - root_mean_squared_error: 0.0593 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1497\n",
            "Epoch 229/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 472ms/step - loss: 0.0035 - root_mean_squared_error: 0.0592 - val_loss: 0.0225 - val_root_mean_squared_error: 0.1500\n",
            "Epoch 230/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 256ms/step - loss: 0.0035 - root_mean_squared_error: 0.0593 - val_loss: 0.0217 - val_root_mean_squared_error: 0.1474\n",
            "Epoch 231/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 250ms/step - loss: 0.0036 - root_mean_squared_error: 0.0598 - val_loss: 0.0228 - val_root_mean_squared_error: 0.1509\n",
            "Epoch 232/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 181ms/step - loss: 0.0035 - root_mean_squared_error: 0.0592 - val_loss: 0.0229 - val_root_mean_squared_error: 0.1514\n",
            "Epoch 233/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 178ms/step - loss: 0.0035 - root_mean_squared_error: 0.0593 - val_loss: 0.0219 - val_root_mean_squared_error: 0.1479\n",
            "Epoch 234/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 199ms/step - loss: 0.0035 - root_mean_squared_error: 0.0595 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1498\n",
            "Epoch 235/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 344ms/step - loss: 0.0035 - root_mean_squared_error: 0.0589 - val_loss: 0.0228 - val_root_mean_squared_error: 0.1511\n",
            "Epoch 236/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 267ms/step - loss: 0.0035 - root_mean_squared_error: 0.0592 - val_loss: 0.0215 - val_root_mean_squared_error: 0.1468\n",
            "Epoch 237/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 116ms/step - loss: 0.0036 - root_mean_squared_error: 0.0599 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1505\n",
            "Epoch 238/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 188ms/step - loss: 0.0035 - root_mean_squared_error: 0.0589 - val_loss: 0.0230 - val_root_mean_squared_error: 0.1518\n",
            "Epoch 239/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 0.0035 - root_mean_squared_error: 0.0593 - val_loss: 0.0217 - val_root_mean_squared_error: 0.1473\n",
            "Epoch 240/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 144ms/step - loss: 0.0035 - root_mean_squared_error: 0.0595 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1497\n",
            "Epoch 241/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 135ms/step - loss: 0.0034 - root_mean_squared_error: 0.0587 - val_loss: 0.0230 - val_root_mean_squared_error: 0.1517\n",
            "Epoch 242/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 216ms/step - loss: 0.0035 - root_mean_squared_error: 0.0592 - val_loss: 0.0214 - val_root_mean_squared_error: 0.1464\n",
            "Epoch 243/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 459ms/step - loss: 0.0036 - root_mean_squared_error: 0.0601 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1507\n",
            "Epoch 244/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 223ms/step - loss: 0.0035 - root_mean_squared_error: 0.0588 - val_loss: 0.0232 - val_root_mean_squared_error: 0.1522\n",
            "Epoch 245/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 157ms/step - loss: 0.0035 - root_mean_squared_error: 0.0592 - val_loss: 0.0216 - val_root_mean_squared_error: 0.1469\n",
            "Epoch 246/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - loss: 0.0035 - root_mean_squared_error: 0.0596 - val_loss: 0.0226 - val_root_mean_squared_error: 0.1502\n",
            "Epoch 247/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 0.0034 - root_mean_squared_error: 0.0586 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1520\n",
            "Epoch 248/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 180ms/step - loss: 0.0035 - root_mean_squared_error: 0.0591 - val_loss: 0.0217 - val_root_mean_squared_error: 0.1473\n",
            "Epoch 249/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step - loss: 0.0035 - root_mean_squared_error: 0.0592 - val_loss: 0.0225 - val_root_mean_squared_error: 0.1500\n",
            "Epoch 250/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 208ms/step - loss: 0.0034 - root_mean_squared_error: 0.0585 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1521\n",
            "Epoch 251/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 123ms/step - loss: 0.0035 - root_mean_squared_error: 0.0589 - val_loss: 0.0219 - val_root_mean_squared_error: 0.1480\n",
            "Epoch 252/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 346ms/step - loss: 0.0035 - root_mean_squared_error: 0.0589 - val_loss: 0.0226 - val_root_mean_squared_error: 0.1502\n",
            "Epoch 253/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 505ms/step - loss: 0.0034 - root_mean_squared_error: 0.0584 - val_loss: 0.0232 - val_root_mean_squared_error: 0.1522\n",
            "Epoch 254/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 0.0034 - root_mean_squared_error: 0.0587 - val_loss: 0.0220 - val_root_mean_squared_error: 0.1482\n",
            "Epoch 255/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 136ms/step - loss: 0.0035 - root_mean_squared_error: 0.0589 - val_loss: 0.0229 - val_root_mean_squared_error: 0.1513\n",
            "Epoch 256/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 149ms/step - loss: 0.0034 - root_mean_squared_error: 0.0583 - val_loss: 0.0234 - val_root_mean_squared_error: 0.1531\n",
            "Epoch 257/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 130ms/step - loss: 0.0034 - root_mean_squared_error: 0.0587 - val_loss: 0.0219 - val_root_mean_squared_error: 0.1482\n",
            "Epoch 258/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0035 - root_mean_squared_error: 0.0592 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1520\n",
            "Epoch 259/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0034 - root_mean_squared_error: 0.0582 - val_loss: 0.0237 - val_root_mean_squared_error: 0.1538\n",
            "Epoch 260/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 350ms/step - loss: 0.0034 - root_mean_squared_error: 0.0587 - val_loss: 0.0218 - val_root_mean_squared_error: 0.1478\n",
            "Epoch 261/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 490ms/step - loss: 0.0035 - root_mean_squared_error: 0.0595 - val_loss: 0.0232 - val_root_mean_squared_error: 0.1524\n",
            "Epoch 262/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 194ms/step - loss: 0.0034 - root_mean_squared_error: 0.0583 - val_loss: 0.0237 - val_root_mean_squared_error: 0.1538\n",
            "Epoch 263/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0034 - root_mean_squared_error: 0.0587 - val_loss: 0.0220 - val_root_mean_squared_error: 0.1483\n",
            "Epoch 264/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0035 - root_mean_squared_error: 0.0588 - val_loss: 0.0228 - val_root_mean_squared_error: 0.1510\n",
            "Epoch 265/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0034 - root_mean_squared_error: 0.0581 - val_loss: 0.0236 - val_root_mean_squared_error: 0.1536\n",
            "Epoch 266/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 153ms/step - loss: 0.0034 - root_mean_squared_error: 0.0586 - val_loss: 0.0222 - val_root_mean_squared_error: 0.1490\n",
            "Epoch 267/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 482ms/step - loss: 0.0034 - root_mean_squared_error: 0.0583 - val_loss: 0.0225 - val_root_mean_squared_error: 0.1499\n",
            "Epoch 268/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 129ms/step - loss: 0.0034 - root_mean_squared_error: 0.0581 - val_loss: 0.0236 - val_root_mean_squared_error: 0.1535\n",
            "Epoch 269/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 186ms/step - loss: 0.0034 - root_mean_squared_error: 0.0584 - val_loss: 0.0226 - val_root_mean_squared_error: 0.1502\n",
            "Epoch 270/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 190ms/step - loss: 0.0034 - root_mean_squared_error: 0.0580 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1496\n",
            "Epoch 271/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 131ms/step - loss: 0.0034 - root_mean_squared_error: 0.0581 - val_loss: 0.0235 - val_root_mean_squared_error: 0.1532\n",
            "Epoch 272/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 100ms/step - loss: 0.0034 - root_mean_squared_error: 0.0580 - val_loss: 0.0234 - val_root_mean_squared_error: 0.1531\n",
            "Epoch 273/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 245ms/step - loss: 0.0033 - root_mean_squared_error: 0.0578 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1507\n",
            "Epoch 274/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 305ms/step - loss: 0.0033 - root_mean_squared_error: 0.0578 - val_loss: 0.0230 - val_root_mean_squared_error: 0.1515\n",
            "Epoch 275/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 363ms/step - loss: 0.0033 - root_mean_squared_error: 0.0575 - val_loss: 0.0237 - val_root_mean_squared_error: 0.1540\n",
            "Epoch 276/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 103ms/step - loss: 0.0033 - root_mean_squared_error: 0.0575 - val_loss: 0.0233 - val_root_mean_squared_error: 0.1528\n",
            "Epoch 277/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 123ms/step - loss: 0.0033 - root_mean_squared_error: 0.0573 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1506\n",
            "Epoch 278/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 168ms/step - loss: 0.0033 - root_mean_squared_error: 0.0574 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1518\n",
            "Epoch 279/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 184ms/step - loss: 0.0033 - root_mean_squared_error: 0.0573 - val_loss: 0.0236 - val_root_mean_squared_error: 0.1536\n",
            "Epoch 280/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 183ms/step - loss: 0.0033 - root_mean_squared_error: 0.0572 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1521\n",
            "Epoch 281/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 165ms/step - loss: 0.0032 - root_mean_squared_error: 0.0570 - val_loss: 0.0226 - val_root_mean_squared_error: 0.1502\n",
            "Epoch 282/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 151ms/step - loss: 0.0033 - root_mean_squared_error: 0.0571 - val_loss: 0.0237 - val_root_mean_squared_error: 0.1540\n",
            "Epoch 283/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 147ms/step - loss: 0.0033 - root_mean_squared_error: 0.0571 - val_loss: 0.0234 - val_root_mean_squared_error: 0.1528\n",
            "Epoch 284/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 414ms/step - loss: 0.0032 - root_mean_squared_error: 0.0569 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1497\n",
            "Epoch 285/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 97ms/step - loss: 0.0032 - root_mean_squared_error: 0.0569 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1507\n",
            "Epoch 286/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 101ms/step - loss: 0.0032 - root_mean_squared_error: 0.0567 - val_loss: 0.0242 - val_root_mean_squared_error: 0.1556\n",
            "Epoch 287/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 134ms/step - loss: 0.0033 - root_mean_squared_error: 0.0572 - val_loss: 0.0232 - val_root_mean_squared_error: 0.1522\n",
            "Epoch 288/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 117ms/step - loss: 0.0032 - root_mean_squared_error: 0.0565 - val_loss: 0.0224 - val_root_mean_squared_error: 0.1497\n",
            "Epoch 289/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 160ms/step - loss: 0.0032 - root_mean_squared_error: 0.0569 - val_loss: 0.0235 - val_root_mean_squared_error: 0.1533\n",
            "Epoch 290/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 108ms/step - loss: 0.0032 - root_mean_squared_error: 0.0563 - val_loss: 0.0240 - val_root_mean_squared_error: 0.1550\n",
            "Epoch 291/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 201ms/step - loss: 0.0032 - root_mean_squared_error: 0.0566 - val_loss: 0.0227 - val_root_mean_squared_error: 0.1508\n",
            "Epoch 292/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 377ms/step - loss: 0.0032 - root_mean_squared_error: 0.0562 - val_loss: 0.0226 - val_root_mean_squared_error: 0.1504\n",
            "Epoch 293/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 432ms/step - loss: 0.0032 - root_mean_squared_error: 0.0562 - val_loss: 0.0239 - val_root_mean_squared_error: 0.1546\n",
            "Epoch 294/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 159ms/step - loss: 0.0031 - root_mean_squared_error: 0.0561 - val_loss: 0.0238 - val_root_mean_squared_error: 0.1542\n",
            "Epoch 295/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 336ms/step - loss: 0.0031 - root_mean_squared_error: 0.0560 - val_loss: 0.0228 - val_root_mean_squared_error: 0.1509\n",
            "Epoch 296/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 327ms/step - loss: 0.0031 - root_mean_squared_error: 0.0560 - val_loss: 0.0231 - val_root_mean_squared_error: 0.1521\n",
            "Epoch 297/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 150ms/step - loss: 0.0031 - root_mean_squared_error: 0.0559 - val_loss: 0.0239 - val_root_mean_squared_error: 0.1546\n",
            "Epoch 298/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 430ms/step - loss: 0.0031 - root_mean_squared_error: 0.0559 - val_loss: 0.0233 - val_root_mean_squared_error: 0.1527\n",
            "Epoch 299/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 223ms/step - loss: 0.0031 - root_mean_squared_error: 0.0556 - val_loss: 0.0230 - val_root_mean_squared_error: 0.1515\n",
            "Epoch 300/300\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 130ms/step - loss: 0.0031 - root_mean_squared_error: 0.0558 - val_loss: 0.0238 - val_root_mean_squared_error: 0.1543\n"
          ]
        },
        {
          "data": {
            "text/plain": [
              "<keras.src.callbacks.history.History at 0x2227fe2c3d0>"
            ]
          },
          "execution_count": 25,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "larger_nn = Sequential()\n",
        "larger_nn.add(InputLayer((columns_count,)))\n",
        "larger_nn.add(Dense(256, 'relu'))\n",
        "larger_nn.add(Dense(128, 'relu'))\n",
        "larger_nn.add(Dense(64, 'relu'))\n",
        "larger_nn.add(Dense(32, 'relu'))\n",
        "larger_nn.add(Dense(1, 'linear'))\n",
        "\n",
        "opt = Adam(learning_rate=.1)\n",
        "cp = ModelCheckpoint('models/models/larger_nn.keras', save_best_only=True)\n",
        "larger_nn.compile(optimizer=opt, loss='mse', metrics=[RootMeanSquaredError()])\n",
        "larger_nn.fit(x=X_train, y=y_train, validation_data=(X_val, y_val), callbacks=[cp], epochs=300)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 26,
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 187ms/step\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 171ms/step\n",
            "\u001b[1m1/1\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step\n",
            "          0         1         2      3            4\n",
            "0 -1.104083  0.828325 -1.362770  1.104  [1.3248785]\n",
            "1  1.588802  0.828325 -1.362770  1.785   [1.857298]\n",
            "2 -1.104083  1.548607 -1.362770  1.134  [1.3652258]\n",
            "3  1.588802  1.548607 -1.362770  1.719   [1.802406]\n",
            "4 -0.565506  1.548607 -1.362770  1.233   [1.272781]\n",
            "5 -0.026929  0.828325 -1.362770  1.328   [1.364181]\n",
            "6 -0.565506 -1.332522 -1.362770  1.199  [1.2721404]\n",
            "7 -0.565506 -0.612240 -1.362770  1.248  [1.2721404]\n",
            "8 -0.026929  0.108042 -1.362770  1.479  [1.3142053]\n",
            "9  1.588802  0.108042  0.733799  1.905  [1.6368772]\n",
            "\n",
            "RMSE: train: 0.09846796561649562 , valid: 0.14909970800395012\n"
          ]
        },
        {
          "data": {
            "image/png": "",
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ]
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "larger_nn = load_model('models/models/large_nn.keras')\n",
        "#prediction\n",
        "y_train_pred=larger_nn.predict(X_train)\n",
        "y_val_pred=larger_nn.predict(X_val)\n",
        "y_test_pred=larger_nn.predict(X_test) \n",
        "\n",
        "#visualisation\n",
        "visualise(X_train, X_val, X_test, y_train_pred, y_val_pred, y_test_pred)"
      ]
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.11.5"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
